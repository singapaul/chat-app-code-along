{"version":3,"file":"index.js","sources":["../src/hooks/useIsomorphicLayoutEffect.ts","../src/loggerSystem.ts","../src/hooks/useSize.ts","../src/hooks/useChangedChildSizes.ts","../src/utils/correctItemSize.ts","../src/hooks/useScrollTop.ts","../src/domIOSystem.ts","../src/AATree.ts","../src/utils/binaryArraySearch.ts","../src/sizeSystem.ts","../src/scrollToIndexSystem.ts","../src/stateFlagsSystem.ts","../src/propsReadySystem.ts","../src/initialTopMostItemIndexSystem.ts","../src/followOutputSystem.ts","../src/groupedListSystem.ts","../src/comparators.tsx","../src/sizeRangeSystem.ts","../src/listStateSystem.ts","../src/utils/simpleMemoize.ts","../src/initialItemCountSystem.ts","../src/scrollSeekSystem.ts","../src/topItemCountSystem.ts","../src/totalListHeightSystem.ts","../src/upwardScrollFixSystem.ts","../src/initialScrollTopSystem.ts","../src/alignToBottomSystem.ts","../src/windowScrollerSystem.ts","../src/scrollIntoViewSystem.ts","../src/listSystem.ts","../src/utils/positionStickyCssValue.ts","../src/hooks/useWindowViewportRect.ts","../src/List.tsx","../src/gridSystem.ts","../src/Grid.tsx","../src/Table.tsx","../src/components.tsx"],"sourcesContent":["import { useEffect, useLayoutEffect } from 'react'\n\nconst useIsomorphicLayoutEffect = typeof document !== 'undefined' ? useLayoutEffect : useEffect\n\nexport default useIsomorphicLayoutEffect\n","import * as u from '@virtuoso.dev/urx'\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\ndeclare namespace globalThis {\n  let VIRTUOSO_LOG_LEVEL: LogLevel | undefined\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\ndeclare namespace window {\n  let VIRTUOSO_LOG_LEVEL: LogLevel | undefined\n}\n\nexport enum LogLevel {\n  DEBUG,\n  INFO,\n  WARN,\n  ERROR,\n}\nexport interface LogMessage {\n  level: LogLevel\n  message: any\n  label: string\n}\n\nexport type Log = (label: string, message: any, level?: LogLevel) => void\n\nconst CONSOLE_METHOD_MAP = {\n  [LogLevel.DEBUG]: 'debug',\n  [LogLevel.INFO]: 'log',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error',\n} as const\n\nconst getGlobalThis = () => (typeof globalThis === 'undefined' ? window : globalThis)\n\nexport const loggerSystem = u.system(\n  () => {\n    const logLevel = u.statefulStream<LogLevel>(LogLevel.ERROR)\n    const log = u.statefulStream<Log>((label: string, message: any, level: LogLevel = LogLevel.INFO) => {\n      const currentLevel = getGlobalThis()['VIRTUOSO_LOG_LEVEL'] ?? u.getValue(logLevel)\n      if (level >= currentLevel) {\n        // eslint-disable-next-line no-console\n        console[CONSOLE_METHOD_MAP[level]](\n          '%creact-virtuoso: %c%s %o',\n          'color: #0253b3; font-weight: bold',\n          'color: initial',\n          label,\n          message\n        )\n      }\n    })\n\n    return {\n      log,\n      logLevel,\n    }\n  },\n  [],\n  { singleton: true }\n)\n","import { useRef } from 'react'\n\nexport type CallbackRefParam = HTMLElement | null\n\nexport function useSizeWithElRef(callback: (e: HTMLElement) => void, enabled = true) {\n  const ref = useRef<CallbackRefParam>(null)\n\n  let callbackRef = (_el: CallbackRefParam) => {\n    void 0\n  }\n\n  if (typeof ResizeObserver !== 'undefined') {\n    const observer = new ResizeObserver((entries: ResizeObserverEntry[]) => {\n      const element = entries[0].target as HTMLElement\n      if (element.offsetParent !== null) {\n        callback(element)\n      }\n    })\n\n    callbackRef = (elRef: CallbackRefParam) => {\n      if (elRef && enabled) {\n        observer.observe(elRef)\n        ref.current = elRef\n      } else {\n        if (ref.current) {\n          observer.unobserve(ref.current)\n        }\n        ref.current = null\n      }\n    }\n  }\n\n  return { ref, callbackRef }\n}\n\nexport default function useSize(callback: (e: HTMLElement) => void, enabled = true) {\n  return useSizeWithElRef(callback, enabled).callbackRef\n}\n","import { Log, LogLevel } from '../loggerSystem'\nimport { SizeFunction, SizeRange } from '../sizeSystem'\nimport { useSizeWithElRef } from './useSize'\nimport { ScrollContainerState } from '../interfaces'\nexport default function useChangedListContentsSizes(\n  callback: (ranges: SizeRange[]) => void,\n  itemSize: SizeFunction,\n  enabled: boolean,\n  scrollContainerStateCallback: (state: ScrollContainerState) => void,\n  log: Log,\n  customScrollParent?: HTMLElement\n) {\n  return useSizeWithElRef((el: HTMLElement) => {\n    const ranges = getChangedChildSizes(el.children, itemSize, 'offsetHeight', log)\n    let scrollableElement = el.parentElement!\n\n    while (!scrollableElement.dataset['virtuosoScroller']) {\n      scrollableElement = scrollableElement.parentElement!\n    }\n\n    const scrollTop = customScrollParent\n      ? customScrollParent.scrollTop\n      : // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      (scrollableElement.firstElementChild! as HTMLDivElement).dataset['viewportType']! === 'window'\n      ? window.pageYOffset || document.documentElement.scrollTop\n      : scrollableElement.scrollTop\n\n    scrollContainerStateCallback({\n      scrollTop: Math.max(scrollTop, 0),\n      scrollHeight: (customScrollParent ?? scrollableElement).scrollHeight,\n      viewportHeight: (customScrollParent ?? scrollableElement).offsetHeight,\n    })\n\n    if (ranges !== null) {\n      callback(ranges)\n    }\n  }, enabled)\n}\n\nfunction getChangedChildSizes(children: HTMLCollection, itemSize: SizeFunction, field: 'offsetHeight' | 'offsetWidth', log: Log) {\n  const length = children.length\n\n  if (length === 0) {\n    return null\n  }\n\n  const results: SizeRange[] = []\n\n  for (let i = 0; i < length; i++) {\n    const child = children.item(i) as HTMLElement\n\n    if (!child || child.dataset.index === undefined) {\n      continue\n    }\n\n    const index = parseInt(child.dataset.index!)\n    const knownSize = parseFloat(child.dataset.knownSize!)\n    const size = itemSize(child, field)\n\n    if (size === 0) {\n      log('Zero-sized element, this should not happen', { child }, LogLevel.ERROR)\n    }\n\n    if (size === knownSize) {\n      continue\n    }\n\n    const lastResult = results[results.length - 1]\n    if (results.length === 0 || lastResult.size !== size || lastResult.endIndex !== index - 1) {\n      results.push({ startIndex: index, endIndex: index, size })\n    } else {\n      results[results.length - 1].endIndex++\n    }\n  }\n\n  return results\n}\n","export function correctItemSize(el: HTMLElement, dimension: 'height' | 'width') {\n  return Math.round(el.getBoundingClientRect()[dimension])\n}\n","import { useRef, useCallback, useEffect } from 'react'\nimport * as u from '@virtuoso.dev/urx'\nimport { correctItemSize } from '../utils/correctItemSize'\nimport { ScrollContainerState } from '../interfaces'\n\nexport type ScrollerRef = Window | HTMLElement | null\n\nfunction approximatelyEqual(num1: number, num2: number) {\n  return Math.abs(num1 - num2) < 1.01\n}\n\nexport default function useScrollTop(\n  scrollContainerStateCallback: (state: ScrollContainerState) => void,\n  smoothScrollTargetReached: (yes: true) => void,\n  scrollerElement: any,\n  scrollerRefCallback: (ref: ScrollerRef) => void = u.noop,\n  customScrollParent?: HTMLElement\n) {\n  const scrollerRef = useRef<HTMLElement | null | Window>(null)\n  const scrollTopTarget = useRef<any>(null)\n  const timeoutRef = useRef<any>(null)\n\n  const handler = useCallback(\n    (ev: Event) => {\n      const el = ev.target as HTMLElement\n      const scrollTop =\n        (el as any) === window || (el as any) === document ? window.pageYOffset || document.documentElement.scrollTop : el.scrollTop\n      const scrollHeight = (el as any) === window ? document.documentElement.scrollHeight : el.scrollHeight\n      const viewportHeight = (el as any) === window ? window.innerHeight : el.offsetHeight\n\n      scrollContainerStateCallback({\n        scrollTop: Math.max(scrollTop, 0),\n        scrollHeight,\n        viewportHeight,\n      })\n\n      if (scrollTopTarget.current !== null) {\n        if (scrollTop === scrollTopTarget.current || scrollTop <= 0 || scrollTop === el.scrollHeight - correctItemSize(el, 'height')) {\n          scrollTopTarget.current = null\n          smoothScrollTargetReached(true)\n          if (timeoutRef.current) {\n            clearTimeout(timeoutRef.current)\n            timeoutRef.current = null\n          }\n        }\n      }\n    },\n    [scrollContainerStateCallback, smoothScrollTargetReached]\n  )\n\n  useEffect(() => {\n    const localRef = customScrollParent ? customScrollParent : scrollerRef.current!\n\n    scrollerRefCallback(customScrollParent ? customScrollParent : scrollerRef.current)\n    handler({ target: localRef } as unknown as Event)\n    localRef.addEventListener('scroll', handler, { passive: true })\n\n    return () => {\n      scrollerRefCallback(null)\n      localRef.removeEventListener('scroll', handler)\n    }\n  }, [scrollerRef, handler, scrollerElement, scrollerRefCallback, customScrollParent])\n\n  function scrollToCallback(location: ScrollToOptions) {\n    const scrollerElement = scrollerRef.current\n    if (!scrollerElement || ('offsetHeight' in scrollerElement && scrollerElement.offsetHeight === 0)) {\n      return\n    }\n\n    const isSmooth = location.behavior === 'smooth'\n\n    let offsetHeight: number\n    let scrollHeight: number\n    let scrollTop: number\n\n    if (scrollerElement === window) {\n      // this is not a mistake\n      scrollHeight = Math.max(correctItemSize(document.documentElement, 'height'), document.documentElement.scrollHeight)\n      offsetHeight = window.innerHeight\n      scrollTop = document.documentElement.scrollTop\n    } else {\n      scrollHeight = (scrollerElement as HTMLElement).scrollHeight\n      offsetHeight = correctItemSize(scrollerElement as HTMLElement, 'height')\n      scrollTop = (scrollerElement as HTMLElement).scrollTop\n    }\n\n    const maxScrollTop = scrollHeight - offsetHeight\n    location.top = Math.ceil(Math.max(Math.min(maxScrollTop, location.top!), 0))\n\n    // avoid system hanging because the DOM never called back\n    // with the scrollTop\n    // scroller is already at this location\n    if (approximatelyEqual(offsetHeight, scrollHeight) || location.top === scrollTop) {\n      scrollContainerStateCallback({ scrollTop, scrollHeight, viewportHeight: offsetHeight })\n      if (isSmooth) {\n        smoothScrollTargetReached(true)\n      }\n      return\n    }\n\n    if (isSmooth) {\n      scrollTopTarget.current = location.top\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current)\n      }\n\n      timeoutRef.current = setTimeout(() => {\n        timeoutRef.current = null\n        scrollTopTarget.current = null\n        smoothScrollTargetReached(true)\n      }, 1000)\n    } else {\n      scrollTopTarget.current = null\n    }\n\n    scrollerElement.scrollTo(location)\n  }\n\n  function scrollByCallback(location: ScrollToOptions) {\n    scrollerRef.current!.scrollBy(location)\n  }\n\n  return { scrollerRef, scrollByCallback, scrollToCallback }\n}\n","import * as u from '@virtuoso.dev/urx'\nimport { ScrollContainerState } from './interfaces'\n\nexport const domIOSystem = u.system(\n  () => {\n    const scrollContainerState = u.stream<ScrollContainerState>()\n    const scrollTop = u.stream<number>()\n    const deviation = u.statefulStream(0)\n    const smoothScrollTargetReached = u.stream<true>()\n    const statefulScrollTop = u.statefulStream(0)\n    const viewportHeight = u.stream<number>()\n    const scrollHeight = u.stream<number>()\n    const headerHeight = u.statefulStream(0)\n    const fixedHeaderHeight = u.statefulStream(0)\n    const footerHeight = u.statefulStream(0)\n    const scrollTo = u.stream<ScrollToOptions>()\n    const scrollBy = u.stream<ScrollToOptions>()\n    const scrollingInProgress = u.statefulStream(false)\n    // bogus, has no effect\n    const react18ConcurrentRendering = u.statefulStream(false)\n\n    u.connect(\n      u.pipe(\n        scrollContainerState,\n        u.map(({ scrollTop }) => scrollTop)\n      ),\n      scrollTop\n    )\n\n    u.connect(\n      u.pipe(\n        scrollContainerState,\n        u.map(({ scrollHeight }) => scrollHeight)\n      ),\n      scrollHeight\n    )\n\n    u.connect(scrollTop, statefulScrollTop)\n\n    return {\n      // input\n      scrollContainerState,\n      scrollTop,\n      viewportHeight,\n      headerHeight,\n      fixedHeaderHeight,\n      footerHeight,\n      scrollHeight,\n      smoothScrollTargetReached,\n      react18ConcurrentRendering,\n\n      // signals\n      scrollTo,\n      scrollBy,\n\n      // state\n      statefulScrollTop,\n      deviation,\n      scrollingInProgress,\n    }\n  },\n  [],\n  { singleton: true }\n)\n","interface NilNode {\n  lvl: 0\n}\n\nconst NIL_NODE: NilNode = { lvl: 0 }\n\ninterface NodeData<T> {\n  k: number\n  v: T\n}\n\ninterface NonNilAANode<T> {\n  k: number\n  v: T\n  lvl: number\n  l: NonNilAANode<T> | NilNode\n  r: NonNilAANode<T> | NilNode\n}\n\nexport interface Range<T> {\n  start: number\n  end: number\n  value: T\n}\n\nexport type AANode<T> = NilNode | NonNilAANode<T>\n\nfunction newAANode<T>(k: number, v: T, lvl: number, l: AANode<T> = NIL_NODE, r: AANode<T> = NIL_NODE): NonNilAANode<T> {\n  return { k, v, lvl, l, r }\n}\n\nexport function empty(node: AANode<any>): node is NilNode {\n  return node === NIL_NODE\n}\n\nexport function newTree<T>(): AANode<T> {\n  return NIL_NODE\n}\n\nexport function remove<T>(node: AANode<T>, key: number): AANode<T> {\n  if (empty(node)) return NIL_NODE\n\n  const { k, l, r } = node\n\n  if (key === k) {\n    if (empty(l)) {\n      return r\n    } else if (empty(r)) {\n      return l\n    } else {\n      const [lastKey, lastValue] = last(l)\n      return adjust(clone(node, { k: lastKey, v: lastValue, l: deleteLast(l) }))\n    }\n  } else if (key < k) {\n    return adjust(clone(node, { l: remove(l, key) }))\n  } else {\n    return adjust(clone(node, { r: remove(r, key) }))\n  }\n}\n\nexport function find<T>(node: AANode<T>, key: number): T | undefined {\n  if (empty(node)) {\n    return\n  }\n\n  if (key === node.k) {\n    return node.v\n  } else if (key < node.k) {\n    return find(node.l, key)\n  } else {\n    return find(node.r, key)\n  }\n}\n\nexport function findMaxKeyValue<T>(node: AANode<T>, value: number, field: 'k' | 'v' = 'k'): [number, T | undefined] {\n  if (empty(node)) {\n    return [-Infinity, undefined]\n  }\n\n  if (node[field] === value) {\n    return [node.k, node.v]\n  }\n\n  if (node[field] < value) {\n    const r = findMaxKeyValue(node.r, value, field)\n    if (r[0] === -Infinity) {\n      return [node.k, node.v]\n    } else {\n      return r\n    }\n  }\n\n  return findMaxKeyValue(node.l, value, field)\n}\n\nexport function insert<T>(node: AANode<T>, k: number, v: T): NonNilAANode<T> {\n  if (empty(node)) {\n    return newAANode(k, v, 1)\n  }\n  if (k === node.k) {\n    return clone(node, { k, v })\n  } else if (k < node.k) {\n    return rebalance(clone(node, { l: insert(node.l, k, v) }))\n  } else {\n    return rebalance(clone(node, { r: insert(node.r, k, v) }))\n  }\n}\n\nexport function walkWithin<T>(node: AANode<T>, start: number, end: number): NodeData<T>[] {\n  if (empty(node)) {\n    return []\n  }\n\n  const { k, v, l, r } = node\n  let result: NodeData<T>[] = []\n  if (k > start) {\n    result = result.concat(walkWithin(l, start, end))\n  }\n\n  if (k >= start && k <= end) {\n    result.push({ k, v })\n  }\n\n  if (k <= end) {\n    result = result.concat(walkWithin(r, start, end))\n  }\n\n  return result\n}\n\nexport function walk<T>(node: AANode<T>): NodeData<T>[] {\n  if (empty(node)) {\n    return []\n  }\n\n  return [...walk(node.l), { k: node.k, v: node.v }, ...walk(node.r)]\n}\n\nfunction last<T>(node: NonNilAANode<T>): [number, T] {\n  return empty(node.r) ? [node.k, node.v] : last(node.r)\n}\n\nfunction deleteLast<T>(node: NonNilAANode<T>): AANode<T> {\n  return empty(node.r) ? node.l : adjust(clone(node, { r: deleteLast(node.r) }))\n}\n\nfunction clone<T>(node: NonNilAANode<T>, args: Partial<NonNilAANode<T>>): NonNilAANode<T> {\n  return newAANode(\n    args.k !== undefined ? args.k : node.k,\n    args.v !== undefined ? args.v : node.v,\n    args.lvl !== undefined ? args.lvl : node.lvl,\n    args.l !== undefined ? args.l : node.l,\n    args.r !== undefined ? args.r : node.r\n  )\n}\n\nfunction isSingle(node: AANode<any>) {\n  return empty(node) || node.lvl > node.r.lvl\n}\n\nfunction rebalance<T>(node: NonNilAANode<T>): NonNilAANode<T> {\n  return split(skew(node))\n}\n\nfunction adjust<T>(node: NonNilAANode<T>): NonNilAANode<T> {\n  const { l, r, lvl } = node\n  if (r.lvl >= lvl - 1 && l.lvl >= lvl - 1) {\n    return node\n  } else if (lvl > r.lvl + 1) {\n    if (isSingle(l)) {\n      return skew(clone(node, { lvl: lvl - 1 }))\n    } else {\n      if (!empty(l) && !empty(l.r)) {\n        return clone(l.r, {\n          l: clone(l, { r: l.r.l }),\n          r: clone(node, {\n            l: l.r.r,\n            lvl: lvl - 1,\n          }),\n          lvl: lvl,\n        })\n      } else {\n        throw new Error('Unexpected empty nodes')\n      }\n    }\n  } else {\n    if (isSingle(node)) {\n      return split(clone(node, { lvl: lvl - 1 }))\n    } else {\n      if (!empty(r) && !empty(r.l)) {\n        const rl = r.l\n        const rlvl = isSingle(rl) ? r.lvl - 1 : r.lvl\n\n        return clone(rl, {\n          l: clone(node, {\n            r: rl.l,\n            lvl: lvl - 1,\n          }),\n          r: split(clone(r, { l: rl.r, lvl: rlvl })),\n          lvl: rl.lvl + 1,\n        })\n      } else {\n        throw new Error('Unexpected empty nodes')\n      }\n    }\n  }\n}\n\nexport function keys(node: AANode<any>): number[] {\n  if (empty(node)) {\n    return []\n  }\n  return [...keys(node.l), node.k, ...keys(node.r)]\n}\n\nexport function ranges<T>(node: AANode<T>): Range<T>[] {\n  return toRanges(walk(node))\n}\n\nexport function rangesWithin<T>(node: AANode<T>, startIndex: number, endIndex: number): Range<T>[] {\n  if (empty(node)) {\n    return []\n  }\n  const adjustedStart = findMaxKeyValue(node, startIndex)[0]\n  return toRanges(walkWithin(node, adjustedStart, endIndex))\n}\n\nexport function arrayToRanges<T, V>(\n  items: T[],\n  parser: (item: T) => { index: number; value: V }\n): Array<{ start: number; end: number; value: V }> {\n  const length = items.length\n  if (length === 0) {\n    return []\n  }\n\n  let { index: start, value } = parser(items[0])\n\n  const result = []\n\n  for (let i = 1; i < length; i++) {\n    const { index: nextIndex, value: nextValue } = parser(items[i])\n    result.push({ start, end: nextIndex - 1, value })\n\n    start = nextIndex\n    value = nextValue\n  }\n\n  result.push({ start, end: Infinity, value })\n  return result\n}\n\nfunction toRanges<T>(nodes: NodeData<T>[]): Range<T>[] {\n  return arrayToRanges(nodes, ({ k: index, v: value }) => ({ index, value }))\n}\n\nfunction split<T>(node: NonNilAANode<T>): NonNilAANode<T> {\n  const { r, lvl } = node\n\n  return !empty(r) && !empty(r.r) && r.lvl === lvl && r.r.lvl === lvl ? clone(r, { l: clone(node, { r: r.l }), lvl: lvl + 1 }) : node\n}\n\nfunction skew<T>(node: NonNilAANode<T>): NonNilAANode<T> {\n  const { l } = node\n\n  return !empty(l) && l.lvl === node.lvl ? clone(l, { r: clone(node, { l: l.r }) }) : node\n}\n","export type Comparator<T> = {\n  (item: T, value: number): -1 | 0 | 1\n}\n\nexport function findIndexOfClosestSmallerOrEqual<T>(items: T[], value: number, comparator: Comparator<T>, start = 0): number {\n  let end = items.length - 1\n\n  while (start <= end) {\n    const index = Math.floor((start + end) / 2)\n    const item = items[index]\n    const match = comparator(item, value)\n    if (match === 0) {\n      return index\n    }\n\n    if (match === -1) {\n      if (end - start < 2) {\n        return index - 1\n      }\n      end = index - 1\n    } else {\n      if (end === start) {\n        return index\n      }\n      start = index + 1\n    }\n  }\n\n  throw new Error(`Failed binary finding record in array - ${items.join(',')}, searched for ${value}`)\n}\n\nexport function findClosestSmallerOrEqual<T>(items: T[], value: number, comparator: Comparator<T>): T {\n  return items[findIndexOfClosestSmallerOrEqual(items, value, comparator)]\n}\n\nexport function findRange<T>(items: T[], startValue: number, endValue: number, comparator: Comparator<T>): T[] {\n  const startIndex = findIndexOfClosestSmallerOrEqual(items, startValue, comparator)\n  const endIndex = findIndexOfClosestSmallerOrEqual(items, endValue, comparator, startIndex)\n  return items.slice(startIndex, endIndex + 1)\n}\n","import * as u from '@virtuoso.dev/urx'\nimport { arrayToRanges, AANode, empty, findMaxKeyValue, insert, newTree, Range, rangesWithin, remove, walk } from './AATree'\nimport * as arrayBinarySearch from './utils/binaryArraySearch'\nimport { correctItemSize } from './utils/correctItemSize'\nimport { loggerSystem, Log, LogLevel } from './loggerSystem'\n\nexport interface SizeRange {\n  startIndex: number\n  endIndex: number\n  size: number\n}\n\nexport type Data = readonly unknown[] | undefined\n\nfunction rangeIncludes(refRange: SizeRange) {\n  const { size, startIndex, endIndex } = refRange\n  return (range: Range<number>) => {\n    return range.start === startIndex && (range.end === endIndex || range.end === Infinity) && range.value === size\n  }\n}\n\nexport function insertRanges(sizeTree: AANode<number>, ranges: SizeRange[]) {\n  let syncStart = empty(sizeTree) ? 0 : Infinity\n\n  for (const range of ranges) {\n    const { size, startIndex, endIndex } = range\n    syncStart = Math.min(syncStart, startIndex)\n\n    if (empty(sizeTree)) {\n      sizeTree = insert(sizeTree, 0, size)\n      continue\n    }\n\n    // extend the range in both directions, so that we can get adjacent neighbours.\n    // if the previous / next ones have the same value as the one we are about to insert,\n    // we 'merge' them.\n    const overlappingRanges = rangesWithin(sizeTree, startIndex - 1, endIndex + 1)\n\n    if (overlappingRanges.some(rangeIncludes(range))) {\n      continue\n    }\n\n    let firstPassDone = false\n    let shouldInsert = false\n    for (const { start: rangeStart, end: rangeEnd, value: rangeValue } of overlappingRanges) {\n      // previous range\n      if (!firstPassDone) {\n        shouldInsert = rangeValue !== size\n        firstPassDone = true\n      } else {\n        // remove the range if it starts within the new range OR if\n        // it has the same value as it, in order to perform a merge\n        if (endIndex >= rangeStart || size === rangeValue) {\n          sizeTree = remove(sizeTree, rangeStart)\n        }\n      }\n\n      // next range\n      if (rangeEnd > endIndex && endIndex >= rangeStart) {\n        if (rangeValue !== size) {\n          sizeTree = insert(sizeTree, endIndex + 1, rangeValue)\n        }\n      }\n    }\n\n    if (shouldInsert) {\n      sizeTree = insert(sizeTree, startIndex, size)\n    }\n  }\n  return [sizeTree, syncStart] as const\n}\n\nexport interface OffsetPoint {\n  offset: number\n  size: number\n  index: number\n}\n\nexport interface SizeState {\n  sizeTree: AANode<number>\n  offsetTree: Array<OffsetPoint>\n  groupOffsetTree: AANode<number>\n  lastIndex: number\n  lastOffset: number\n  lastSize: number\n  groupIndices: number[]\n}\n\nexport function initialSizeState(): SizeState {\n  return {\n    offsetTree: [],\n    sizeTree: newTree<number>(),\n    groupOffsetTree: newTree<number>(),\n    lastIndex: 0,\n    lastOffset: 0,\n    lastSize: 0,\n    groupIndices: [],\n  }\n}\n\nexport function indexComparator({ index: itemIndex }: OffsetPoint, index: number) {\n  return index === itemIndex ? 0 : index < itemIndex ? -1 : 1\n}\n\nexport function offsetComparator({ offset: itemOffset }: OffsetPoint, offset: number) {\n  return offset === itemOffset ? 0 : offset < itemOffset ? -1 : 1\n}\n\nfunction offsetPointParser(point: OffsetPoint) {\n  return { index: point.index, value: point }\n}\n\nexport function rangesWithinOffsets(\n  tree: Array<OffsetPoint>,\n  startOffset: number,\n  endOffset: number,\n  minStartIndex = 0\n): Array<{\n  start: number\n  end: number\n  value: {\n    size: number\n    offset: number\n    index: number\n  }\n}> {\n  if (minStartIndex > 0) {\n    startOffset = Math.max(startOffset, arrayBinarySearch.findClosestSmallerOrEqual(tree, minStartIndex, indexComparator).offset)\n  }\n\n  return arrayToRanges(arrayBinarySearch.findRange(tree, startOffset, endOffset, offsetComparator), offsetPointParser)\n}\n\nfunction createOffsetTree(prevOffsetTree: OffsetPoint[], syncStart: number, sizeTree: AANode<number>) {\n  let offsetTree = prevOffsetTree\n  let prevIndex = 0\n  let prevSize = 0\n\n  let prevOffset = 0\n  let startIndex = 0\n\n  if (syncStart !== 0) {\n    startIndex = arrayBinarySearch.findIndexOfClosestSmallerOrEqual(offsetTree, syncStart - 1, indexComparator)\n    const offsetInfo = offsetTree[startIndex]\n    prevOffset = offsetInfo.offset\n    const kv = findMaxKeyValue(sizeTree, syncStart - 1)\n    prevIndex = kv[0]\n    prevSize = kv[1]!\n\n    if (offsetTree.length && offsetTree[startIndex].size === findMaxKeyValue(sizeTree, syncStart)[1]) {\n      startIndex -= 1\n    }\n\n    offsetTree = offsetTree.slice(0, startIndex + 1)\n  } else {\n    offsetTree = []\n  }\n\n  for (const { start: startIndex, value } of rangesWithin(sizeTree, syncStart, Infinity)) {\n    const aOffset = (startIndex - prevIndex) * prevSize + prevOffset\n    offsetTree.push({\n      offset: aOffset,\n      size: value,\n      index: startIndex,\n    })\n    prevIndex = startIndex\n    prevOffset = aOffset\n    prevSize = value\n  }\n\n  return {\n    offsetTree,\n    lastIndex: prevIndex,\n    lastOffset: prevOffset,\n    lastSize: prevSize,\n  }\n}\n\nexport function sizeStateReducer(state: SizeState, [ranges, groupIndices, log]: [SizeRange[], number[], Log]) {\n  if (ranges.length > 0) {\n    log('received item sizes', ranges, LogLevel.DEBUG)\n  }\n  const sizeTree = state.sizeTree\n  let newSizeTree: AANode<number> = sizeTree\n  let syncStart = 0\n\n  // We receive probe item results from a group probe,\n  // which should always pass an item and a group\n  // the results contain two ranges, which we consider to mean that groups and items have different size\n  if (groupIndices.length > 0 && empty(sizeTree) && ranges.length === 2) {\n    const groupSize = ranges[0].size\n    const itemSize = ranges[1].size\n    newSizeTree = groupIndices.reduce((tree, groupIndex) => {\n      return insert(insert(tree, groupIndex, groupSize), groupIndex + 1, itemSize)\n    }, newSizeTree)\n  } else {\n    ;[newSizeTree, syncStart] = insertRanges(newSizeTree, ranges)\n  }\n\n  if (newSizeTree === sizeTree) {\n    return state\n  }\n\n  const { offsetTree: newOffsetTree, lastIndex, lastSize, lastOffset } = createOffsetTree(state.offsetTree, syncStart, newSizeTree)\n\n  return {\n    sizeTree: newSizeTree,\n    offsetTree: newOffsetTree,\n    lastIndex,\n    lastOffset,\n    lastSize,\n    groupOffsetTree: groupIndices.reduce((tree, index) => {\n      return insert(tree, index, offsetOf(index, newOffsetTree))\n    }, newTree<number>()),\n    groupIndices,\n  }\n}\n\nexport function offsetOf(index: number, tree: Array<OffsetPoint>) {\n  if (tree.length === 0) {\n    return 0\n  }\n\n  const { offset, index: startIndex, size } = arrayBinarySearch.findClosestSmallerOrEqual(tree, index, indexComparator)\n  return size * (index - startIndex) + offset\n}\n\nexport type FlatOrGroupedLocation = { index: number | 'LAST' } | { groupIndex: number }\n\nexport function isGroupLocation(location: FlatOrGroupedLocation): location is { groupIndex: number } {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return typeof (location as any).groupIndex !== 'undefined'\n}\n\nexport function originalIndexFromLocation(location: FlatOrGroupedLocation, sizes: SizeState, lastIndex: number) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (isGroupLocation(location)) {\n    // return the index of the first item below the index\n    return sizes.groupIndices[location.groupIndex] + 1\n  } else {\n    const numericIndex = location.index === 'LAST' ? lastIndex - 1 : location.index\n    let result = originalIndexFromItemIndex(numericIndex, sizes)\n    result = Math.max(0, result, Math.min(lastIndex, result))\n    return result\n  }\n}\n\nexport function originalIndexFromItemIndex(itemIndex: number, sizes: SizeState) {\n  if (!hasGroups(sizes)) {\n    return itemIndex\n  }\n\n  let groupOffset = 0\n  while (sizes.groupIndices[groupOffset] <= itemIndex + groupOffset) {\n    groupOffset++\n  }\n  // we find the real item index, offsetting it by the number of group items before it\n  return itemIndex + groupOffset\n}\n\nexport function hasGroups(sizes: SizeState) {\n  return !empty(sizes.groupOffsetTree)\n}\n\ntype OptionalNumber = number | undefined\n\nconst SIZE_MAP = {\n  offsetHeight: 'height',\n  offsetWidth: 'width',\n} as const\n\n/** Calculates the height of `el`, which will be the `Item` element in the DOM. */\nexport type SizeFunction = (el: HTMLElement, field: 'offsetHeight' | 'offsetWidth') => number\n\nexport const sizeSystem = u.system(\n  ([{ log }]) => {\n    const sizeRanges = u.stream<SizeRange[]>()\n    const totalCount = u.stream<number>()\n    const statefulTotalCount = u.statefulStreamFromEmitter(totalCount, 0)\n    const unshiftWith = u.stream<number>()\n    const shiftWith = u.stream<number>()\n    const firstItemIndex = u.statefulStream(0)\n    const groupIndices = u.statefulStream([] as number[])\n    const fixedItemSize = u.statefulStream<OptionalNumber>(undefined)\n    const defaultItemSize = u.statefulStream<OptionalNumber>(undefined)\n    const itemSize = u.statefulStream<SizeFunction>((el, field) => correctItemSize(el, SIZE_MAP[field]))\n    const data = u.statefulStream<Data>(undefined)\n    const initial = initialSizeState()\n\n    const sizes = u.statefulStreamFromEmitter(\n      u.pipe(sizeRanges, u.withLatestFrom(groupIndices, log), u.scan(sizeStateReducer, initial), u.distinctUntilChanged()),\n      initial\n    )\n\n    u.connect(\n      u.pipe(\n        groupIndices,\n        u.filter((indexes) => indexes.length > 0),\n        u.withLatestFrom(sizes),\n        u.map(([groupIndices, sizes]) => {\n          const groupOffsetTree = groupIndices.reduce((tree, index, idx) => {\n            return insert(tree, index, offsetOf(index, sizes.offsetTree) || idx)\n          }, newTree<number>())\n\n          return {\n            ...sizes,\n            groupIndices,\n            groupOffsetTree,\n          }\n        })\n      ),\n      sizes\n    )\n\n    // decreasing the total count should remove any existing entries\n    // beyond the last index - do this by publishing the default size as a range over them.\n    u.connect(\n      u.pipe(\n        totalCount,\n        u.withLatestFrom(sizes),\n        u.filter(([totalCount, { lastIndex }]) => {\n          return totalCount < lastIndex\n        }),\n        u.map(([totalCount, { lastIndex, lastSize }]) => {\n          return [\n            {\n              startIndex: totalCount,\n              endIndex: lastIndex,\n              size: lastSize,\n            },\n          ] as SizeRange[]\n        })\n      ),\n      sizeRanges\n    )\n\n    u.connect(fixedItemSize, defaultItemSize)\n\n    const trackItemSizes = u.statefulStreamFromEmitter(\n      u.pipe(\n        fixedItemSize,\n        u.map((size) => size === undefined)\n      ),\n      true\n    )\n\n    u.connect(\n      u.pipe(\n        defaultItemSize,\n        u.filter((value) => {\n          return value !== undefined && empty(u.getValue(sizes).sizeTree)\n        }),\n        u.map((size) => [{ startIndex: 0, endIndex: 0, size }] as SizeRange[])\n      ),\n      sizeRanges\n    )\n\n    const listRefresh = u.streamFromEmitter(\n      u.pipe(\n        sizeRanges,\n        u.withLatestFrom(sizes),\n        u.scan(\n          ({ sizes: oldSizes }, [_, newSizes]) => {\n            return {\n              changed: newSizes !== oldSizes,\n              sizes: newSizes,\n            }\n          },\n          { changed: false, sizes: initial }\n        ),\n        u.map((value) => value.changed)\n      )\n    )\n\n    u.subscribe(\n      u.pipe(\n        firstItemIndex,\n        u.scan(\n          (prev, next) => {\n            return { diff: prev.prev - next, prev: next }\n          },\n          { diff: 0, prev: 0 }\n        ),\n        u.map((val) => val.diff)\n      ),\n      (offset) => {\n        if (offset > 0) {\n          u.publish(unshiftWith, offset)\n        } else if (offset < 0) {\n          u.publish(shiftWith, offset)\n        }\n      }\n    )\n\n    u.subscribe(u.pipe(firstItemIndex, u.withLatestFrom(log)), ([index, log]) => {\n      if (index < 0) {\n        log(\n          \"`firstItemIndex` prop should not be set to less than zero. If you don't know the total count, just use a very high value\",\n          { firstItemIndex },\n          LogLevel.ERROR\n        )\n      }\n    })\n\n    // Capture the current list top item before the sizes get refreshed\n    const beforeUnshiftWith = u.streamFromEmitter(unshiftWith)\n\n    u.connect(\n      u.pipe(\n        unshiftWith,\n        u.withLatestFrom(sizes),\n        u.map(([unshiftWith, sizes]) => {\n          if (sizes.groupIndices.length > 0) {\n            throw new Error('Virtuoso: prepending items does not work with groups')\n          }\n\n          return walk(sizes.sizeTree).reduce(\n            (acc, { k: index, v: size }) => {\n              return {\n                ranges: [...acc.ranges, { startIndex: acc.prevIndex, endIndex: index + unshiftWith - 1, size: acc.prevSize }],\n                prevIndex: index + unshiftWith,\n                prevSize: size,\n              }\n            },\n            {\n              ranges: [] as SizeRange[],\n              prevIndex: 0,\n              prevSize: sizes.lastSize,\n            }\n          ).ranges\n        })\n      ),\n      sizeRanges\n    )\n\n    const shiftWithOffset = u.streamFromEmitter(\n      u.pipe(\n        shiftWith,\n        u.withLatestFrom(sizes),\n        u.map(([shiftWith, { offsetTree }]) => {\n          const newFirstItemIndex = -shiftWith\n          return offsetOf(newFirstItemIndex, offsetTree)\n        })\n      )\n    )\n\n    u.connect(\n      u.pipe(\n        shiftWith,\n        u.withLatestFrom(sizes),\n        u.map(([shiftWith, sizes]) => {\n          if (sizes.groupIndices.length > 0) {\n            throw new Error('Virtuoso: shifting items does not work with groups')\n          }\n\n          const newSizeTree = walk(sizes.sizeTree).reduce((acc, { k, v }) => {\n            return insert(acc, Math.max(0, k + shiftWith), v)\n          }, newTree<number>())\n\n          return {\n            ...sizes,\n            sizeTree: newSizeTree,\n            ...createOffsetTree(sizes.offsetTree, 0, newSizeTree),\n          }\n        })\n      ),\n      sizes\n    )\n\n    return {\n      // input\n      data,\n      totalCount,\n      sizeRanges,\n      groupIndices,\n      defaultItemSize,\n      fixedItemSize,\n      unshiftWith,\n      shiftWith,\n      shiftWithOffset,\n      beforeUnshiftWith,\n      firstItemIndex,\n\n      // output\n      sizes,\n      listRefresh,\n      statefulTotalCount,\n      trackItemSizes,\n      itemSize,\n    }\n  },\n  u.tup(loggerSystem),\n  { singleton: true }\n)\n","/* eslint-disable @typescript-eslint/no-unsafe-call */\nimport * as u from '@virtuoso.dev/urx'\nimport { findMaxKeyValue } from './AATree'\nimport { domIOSystem } from './domIOSystem'\nimport { offsetOf, originalIndexFromLocation, sizeSystem } from './sizeSystem'\nimport { IndexLocationWithAlign } from './interfaces'\nimport { loggerSystem, LogLevel } from './loggerSystem'\n\nexport type IndexLocation = number | IndexLocationWithAlign\n\nconst SUPPORTS_SCROLL_TO_OPTIONS = typeof document !== 'undefined' && 'scrollBehavior' in document.documentElement.style\n\nexport function normalizeIndexLocation(location: IndexLocation) {\n  const result: IndexLocationWithAlign = typeof location === 'number' ? { index: location } : location\n\n  if (!result.align) {\n    result.align = 'start'\n  }\n  if (!result.behavior || !SUPPORTS_SCROLL_TO_OPTIONS) {\n    result.behavior = 'auto'\n  }\n  if (!result.offset) {\n    result.offset = 0\n  }\n\n  return result\n}\n\nexport const scrollToIndexSystem = u.system(\n  ([\n    { sizes, totalCount, listRefresh },\n    { scrollingInProgress, viewportHeight, scrollTo, smoothScrollTargetReached, headerHeight, footerHeight },\n    { log },\n  ]) => {\n    const scrollToIndex = u.stream<IndexLocation>()\n    const topListHeight = u.statefulStream(0)\n\n    let unsubscribeNextListRefresh: any = null\n    let cleartTimeoutRef: any = null\n    let unsubscribeListRefresh: any = null\n\n    function cleanup() {\n      if (unsubscribeNextListRefresh) {\n        unsubscribeNextListRefresh()\n        unsubscribeNextListRefresh = null\n      }\n\n      if (unsubscribeListRefresh) {\n        unsubscribeListRefresh()\n        unsubscribeListRefresh = null\n      }\n\n      if (cleartTimeoutRef) {\n        clearTimeout(cleartTimeoutRef)\n        cleartTimeoutRef = null\n      }\n      u.publish(scrollingInProgress, false)\n    }\n\n    u.connect(\n      u.pipe(\n        scrollToIndex,\n        u.withLatestFrom(sizes, viewportHeight, totalCount, topListHeight, headerHeight, footerHeight, log),\n        u.map(([location, sizes, viewportHeight, totalCount, topListHeight, headerHeight, footerHeight, log]) => {\n          const normalLocation = normalizeIndexLocation(location)\n          const { align, behavior, offset } = normalLocation\n          const lastIndex = totalCount - 1\n\n          const index = originalIndexFromLocation(normalLocation, sizes, lastIndex)\n\n          let top = offsetOf(index, sizes.offsetTree) + headerHeight\n          if (align === 'end') {\n            top = top - viewportHeight + findMaxKeyValue(sizes.sizeTree, index)[1]!\n            if (index === lastIndex) {\n              top += footerHeight\n            }\n          } else if (align === 'center') {\n            top = top - viewportHeight / 2 + findMaxKeyValue(sizes.sizeTree, index)[1]! / 2\n          } else {\n            top -= topListHeight\n          }\n\n          if (offset) {\n            top += offset\n          }\n\n          const retry = (listChanged: boolean) => {\n            cleanup()\n            if (listChanged) {\n              log('retrying to scroll to', { location }, LogLevel.DEBUG)\n              u.publish(scrollToIndex, location)\n            } else {\n              log('list did not change, scroll successful', {}, LogLevel.DEBUG)\n            }\n          }\n\n          cleanup()\n\n          if (behavior === 'smooth') {\n            let listChanged = false\n            unsubscribeListRefresh = u.subscribe(listRefresh, (changed) => {\n              listChanged = listChanged || changed\n            })\n\n            unsubscribeNextListRefresh = u.handleNext(smoothScrollTargetReached, () => {\n              retry(listChanged)\n            })\n          } else {\n            unsubscribeNextListRefresh = u.handleNext(u.pipe(listRefresh, watchChangesFor(50)), retry)\n          }\n\n          // if the scroll jump is too small, the list won't get rerendered.\n          // clean this listener\n          cleartTimeoutRef = setTimeout(() => {\n            cleanup()\n          }, 1200)\n\n          u.publish(scrollingInProgress, true)\n          log('scrolling from index to', { index, top, behavior }, LogLevel.DEBUG)\n          return { top, behavior }\n        })\n      ),\n      scrollTo\n    )\n\n    return {\n      scrollToIndex,\n      topListHeight,\n    }\n  },\n  u.tup(sizeSystem, domIOSystem, loggerSystem),\n  { singleton: true }\n)\n\nfunction watchChangesFor(limit: number): u.Operator<boolean> {\n  return (done) => {\n    const timeoutRef = setTimeout(() => {\n      done(false)\n    }, limit)\n    return (value) => {\n      if (value) {\n        done(true)\n        clearTimeout(timeoutRef)\n      }\n    }\n  }\n}\n","import * as u from '@virtuoso.dev/urx'\nimport { domIOSystem } from './domIOSystem'\n\nexport const UP = 'up' as const\nexport const DOWN = 'down' as const\nexport const NONE = 'none' as const\nexport type ScrollDirection = typeof UP | typeof DOWN | typeof NONE\n\nexport interface ListBottomInfo {\n  bottom: number\n  offsetBottom: number\n}\n\nexport interface AtBottomParams {\n  offsetBottom: number\n  scrollTop: number\n  viewportHeight: number\n  scrollHeight: number\n}\n\nexport type NotAtBottomReason =\n  | 'SIZE_INCREASED'\n  | 'NOT_SHOWING_LAST_ITEM'\n  | 'VIEWPORT_HEIGHT_DECREASING'\n  | 'SCROLLING_UPWARDS'\n  | 'NOT_FULLY_SCROLLED_TO_LAST_ITEM_BOTTOM'\n\nexport type AtBottomReason = 'SIZE_DECREASED' | 'SCROLLED_DOWN'\n\nexport type AtBottomState =\n  | {\n      atBottom: false\n      notAtBottomBecause: NotAtBottomReason\n      state: AtBottomParams\n    }\n  | {\n      atBottom: true\n      state: AtBottomParams\n      atBottomBecause: AtBottomReason\n      scrollTopDelta: number\n    }\n\nconst INITIAL_BOTTOM_STATE = {\n  atBottom: false,\n  notAtBottomBecause: 'NOT_SHOWING_LAST_ITEM',\n  state: {\n    offsetBottom: 0,\n    scrollTop: 0,\n    viewportHeight: 0,\n    scrollHeight: 0,\n  },\n} as AtBottomState\n\nconst DEFAULT_AT_TOP_THRESHOLD = 0\n\nexport const stateFlagsSystem = u.system(([{ scrollContainerState, scrollTop, viewportHeight, headerHeight, footerHeight, scrollBy }]) => {\n  const isAtBottom = u.statefulStream(false)\n  const isAtTop = u.statefulStream(true)\n  const atBottomStateChange = u.stream<boolean>()\n  const atTopStateChange = u.stream<boolean>()\n  const atBottomThreshold = u.statefulStream(4)\n  const atTopThreshold = u.statefulStream(DEFAULT_AT_TOP_THRESHOLD)\n\n  // skip 1 to avoid an initial on/off flick\n  const isScrolling = u.streamFromEmitter(\n    u.pipe(\n      u.merge(u.pipe(u.duc(scrollTop), u.skip(1), u.mapTo(true)), u.pipe(u.duc(scrollTop), u.skip(1), u.mapTo(false), u.debounceTime(100))),\n      u.distinctUntilChanged()\n    )\n  )\n\n  const isScrollingBy = u.statefulStreamFromEmitter(\n    u.pipe(u.merge(u.pipe(scrollBy, u.mapTo(true)), u.pipe(scrollBy, u.mapTo(false), u.debounceTime(200))), u.distinctUntilChanged()),\n    false\n  )\n\n  // u.subscribe(isScrollingBy, (isScrollingBy) => console.log({ isScrollingBy }))\n\n  u.connect(\n    u.pipe(\n      u.combineLatest(u.duc(scrollTop), u.duc(atTopThreshold)),\n      u.map(([top, atTopThreshold]) => top <= atTopThreshold),\n      u.distinctUntilChanged()\n    ),\n    isAtTop\n  )\n\n  u.connect(u.pipe(isAtTop, u.throttleTime(50)), atTopStateChange)\n\n  const atBottomState = u.streamFromEmitter(\n    u.pipe(\n      u.combineLatest(scrollContainerState, u.duc(viewportHeight), u.duc(headerHeight), u.duc(footerHeight), u.duc(atBottomThreshold)),\n      u.scan((current, [{ scrollTop, scrollHeight }, viewportHeight, _headerHeight, _footerHeight, atBottomThreshold]) => {\n        const isAtBottom = scrollTop + viewportHeight - scrollHeight > -atBottomThreshold\n        const state = {\n          viewportHeight,\n          scrollTop,\n          scrollHeight,\n        }\n\n        if (isAtBottom) {\n          let atBottomBecause: 'SIZE_DECREASED' | 'SCROLLED_DOWN'\n          let scrollTopDelta: number\n          if (scrollTop > current.state.scrollTop) {\n            atBottomBecause = 'SCROLLED_DOWN'\n            scrollTopDelta = current.state.scrollTop - scrollTop\n          } else {\n            atBottomBecause = 'SIZE_DECREASED'\n            scrollTopDelta = current.state.scrollTop - scrollTop || (current as { scrollTopDelta: number }).scrollTopDelta\n          }\n          return {\n            atBottom: true,\n            state,\n            atBottomBecause,\n            scrollTopDelta,\n          } as AtBottomState\n        }\n\n        let notAtBottomBecause: NotAtBottomReason\n\n        if (state.scrollHeight > current.state.scrollHeight) {\n          notAtBottomBecause = 'SIZE_INCREASED'\n        } else if (viewportHeight < current.state.viewportHeight) {\n          notAtBottomBecause = 'VIEWPORT_HEIGHT_DECREASING'\n        } else if (scrollTop < current.state.scrollTop) {\n          notAtBottomBecause = 'SCROLLING_UPWARDS'\n        } else {\n          notAtBottomBecause = 'NOT_FULLY_SCROLLED_TO_LAST_ITEM_BOTTOM'\n        }\n\n        return {\n          atBottom: false,\n          notAtBottomBecause,\n          state,\n        } as AtBottomState\n      }, INITIAL_BOTTOM_STATE),\n      u.distinctUntilChanged((prev, next) => {\n        return prev && prev.atBottom === next.atBottom\n      })\n    )\n  )\n\n  const lastJumpDueToItemResize = u.statefulStreamFromEmitter(\n    u.pipe(\n      scrollContainerState,\n      u.scan(\n        (current, { scrollTop, scrollHeight, viewportHeight }) => {\n          if (current.scrollHeight !== scrollHeight) {\n            const atBottom = scrollTop === scrollHeight - viewportHeight\n\n            if (current.scrollTop !== scrollTop && atBottom) {\n              return {\n                scrollHeight,\n                scrollTop,\n                jump: current.scrollTop - scrollTop,\n                changed: true,\n              }\n            } else {\n              return {\n                scrollHeight,\n                scrollTop,\n                jump: 0,\n                changed: true,\n              }\n            }\n          } else {\n            return {\n              scrollTop,\n              scrollHeight,\n              jump: 0,\n              changed: false,\n            }\n          }\n        },\n        { scrollHeight: 0, jump: 0, scrollTop: 0, changed: false }\n      ),\n      u.filter((value) => value.changed),\n      u.map((value) => value.jump)\n    ),\n    0\n  )\n\n  u.connect(\n    u.pipe(\n      atBottomState,\n      u.map((state) => state.atBottom)\n    ),\n    isAtBottom\n  )\n\n  u.connect(u.pipe(isAtBottom, u.throttleTime(50)), atBottomStateChange)\n\n  const scrollDirection = u.statefulStream<ScrollDirection>(DOWN)\n\n  u.connect(\n    u.pipe(\n      scrollContainerState,\n      u.map(({ scrollTop }) => scrollTop),\n      u.distinctUntilChanged(),\n      u.scan(\n        (acc, scrollTop) => {\n          // if things change while compensating for items, ignore,\n          // but store the new scrollTop\n          if (u.getValue(isScrollingBy)) {\n            return { direction: acc.direction, prevScrollTop: scrollTop }\n          }\n\n          return { direction: scrollTop < acc.prevScrollTop ? UP : DOWN, prevScrollTop: scrollTop }\n        },\n        { direction: DOWN, prevScrollTop: 0 } as { direction: ScrollDirection; prevScrollTop: number }\n      ),\n      u.map((value) => value.direction)\n    ),\n    scrollDirection\n  )\n\n  u.connect(u.pipe(scrollContainerState, u.throttleTime(50), u.mapTo(NONE)), scrollDirection)\n\n  const scrollVelocity = u.statefulStream(0)\n\n  u.connect(\n    u.pipe(\n      isScrolling,\n      u.filter((value) => !value),\n      u.mapTo(0)\n    ),\n    scrollVelocity\n  )\n\n  u.connect(\n    u.pipe(\n      scrollTop,\n      u.throttleTime(100),\n      u.withLatestFrom(isScrolling),\n      u.filter(([_, isScrolling]) => !!isScrolling),\n      u.scan(([_, prev], [next]) => [prev, next], [0, 0]),\n      u.map(([prev, next]) => next - prev)\n    ),\n    scrollVelocity\n  )\n\n  return {\n    isScrolling,\n    isAtTop,\n    isAtBottom,\n    atBottomState,\n    atTopStateChange,\n    atBottomStateChange,\n    scrollDirection,\n    atBottomThreshold,\n    atTopThreshold,\n    scrollVelocity,\n    lastJumpDueToItemResize,\n  }\n}, u.tup(domIOSystem))\n","import * as u from '@virtuoso.dev/urx'\nimport { getValue, tup } from '@virtuoso.dev/urx'\nimport { loggerSystem, LogLevel } from './loggerSystem'\n\nexport const propsReadySystem = u.system(\n  ([{ log }]) => {\n    const propsReady = u.statefulStream(false)\n\n    const didMount = u.streamFromEmitter(\n      u.pipe(\n        propsReady,\n        u.filter((ready) => ready),\n        u.distinctUntilChanged()\n      )\n    )\n    u.subscribe(propsReady, (value) => {\n      value && getValue(log)('props updated', {}, LogLevel.DEBUG)\n    })\n\n    return { propsReady, didMount }\n  },\n  tup(loggerSystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { empty } from './AATree'\nimport { sizeSystem } from './sizeSystem'\nimport { domIOSystem } from './domIOSystem'\nimport { scrollToIndexSystem } from './scrollToIndexSystem'\nimport { propsReadySystem } from './propsReadySystem'\nimport { FlatIndexLocationWithAlign } from './interfaces'\n\nexport function getInitialTopMostItemIndexNumber(location: number | FlatIndexLocationWithAlign, totalCount: number): number {\n  const lastIndex = totalCount - 1\n  const index = typeof location === 'number' ? location : location.index === 'LAST' ? lastIndex : location.index\n  return index\n}\n\nexport const initialTopMostItemIndexSystem = u.system(\n  ([{ sizes, listRefresh, defaultItemSize }, { scrollTop }, { scrollToIndex }, { didMount }]) => {\n    const scrolledToInitialItem = u.statefulStream(true)\n    const initialTopMostItemIndex = u.statefulStream<number | FlatIndexLocationWithAlign>(0)\n\n    u.connect(\n      u.pipe(\n        didMount,\n        u.withLatestFrom(initialTopMostItemIndex),\n        u.filter(([_, location]) => !!location),\n        u.mapTo(false)\n      ),\n      scrolledToInitialItem\n    )\n\n    u.subscribe(\n      u.pipe(\n        u.combineLatest(listRefresh, didMount),\n        u.withLatestFrom(scrolledToInitialItem, sizes, defaultItemSize),\n        u.filter(([[, didMount], scrolledToInitialItem, { sizeTree }, defaultItemSize]) => {\n          return didMount && (!empty(sizeTree) || defaultItemSize !== undefined) && !scrolledToInitialItem\n        }),\n        u.withLatestFrom(initialTopMostItemIndex)\n      ),\n      ([, initialTopMostItemIndex]) => {\n        setTimeout(() => {\n          u.handleNext(scrollTop, () => {\n            u.publish(scrolledToInitialItem, true)\n          })\n          u.publish(scrollToIndex, initialTopMostItemIndex)\n        })\n      }\n    )\n\n    return {\n      scrolledToInitialItem,\n      initialTopMostItemIndex,\n    }\n  },\n  u.tup(sizeSystem, domIOSystem, scrollToIndexSystem, propsReadySystem),\n  { singleton: true }\n)\n","/* eslint-disable @typescript-eslint/no-unsafe-call */\nimport * as u from '@virtuoso.dev/urx'\nimport { scrollToIndexSystem } from './scrollToIndexSystem'\nimport { sizeSystem } from './sizeSystem'\nimport { stateFlagsSystem } from './stateFlagsSystem'\nimport { initialTopMostItemIndexSystem } from './initialTopMostItemIndexSystem'\nimport { FollowOutput, FollowOutputScalarType } from './interfaces'\nimport { propsReadySystem } from './propsReadySystem'\nimport { loggerSystem, LogLevel } from './loggerSystem'\nimport { domIOSystem } from './domIOSystem'\n\nfunction normalizeFollowOutput(follow: FollowOutputScalarType): FollowOutputScalarType {\n  if (!follow) {\n    return false\n  }\n  return follow === 'smooth' ? 'smooth' : 'auto'\n}\n\nconst behaviorFromFollowOutput = (follow: FollowOutput, isAtBottom: boolean) => {\n  if (typeof follow === 'function') {\n    return normalizeFollowOutput(follow(isAtBottom))\n  }\n  return isAtBottom && normalizeFollowOutput(follow)\n}\n\nexport const followOutputSystem = u.system(\n  ([\n    { totalCount, listRefresh },\n    { isAtBottom, atBottomState },\n    { scrollToIndex },\n    { scrolledToInitialItem },\n    { propsReady, didMount },\n    { log },\n    { scrollingInProgress },\n  ]) => {\n    const followOutput = u.statefulStream<FollowOutput>(false)\n    let pendingScrollHandle: any = null\n\n    function scrollToBottom(followOutputBehavior: FollowOutputScalarType) {\n      u.publish(scrollToIndex, {\n        index: 'LAST',\n        align: 'end',\n        behavior: followOutputBehavior,\n      })\n    }\n\n    u.subscribe(\n      u.pipe(\n        u.combineLatest(u.pipe(u.duc(totalCount), u.skip(1)), didMount),\n        u.withLatestFrom(u.duc(followOutput), isAtBottom, scrolledToInitialItem, scrollingInProgress),\n        u.map(([[totalCount, didMount], followOutput, isAtBottom, scrolledToInitialItem, scrollingInProgress]) => {\n          let shouldFollow = didMount && scrolledToInitialItem\n          let followOutputBehavior: FollowOutputScalarType = 'auto'\n\n          if (shouldFollow) {\n            // if scrolling to index is in progress,\n            // assume that a previous followOutput response is going\n            followOutputBehavior = behaviorFromFollowOutput(followOutput, isAtBottom || scrollingInProgress)\n            shouldFollow = shouldFollow && !!followOutputBehavior\n          }\n\n          return { totalCount, shouldFollow, followOutputBehavior }\n        }),\n        u.filter(({ shouldFollow }) => shouldFollow)\n      ),\n      ({ totalCount, followOutputBehavior }) => {\n        if (pendingScrollHandle) {\n          pendingScrollHandle()\n          pendingScrollHandle = null\n        }\n\n        pendingScrollHandle = u.handleNext(listRefresh, () => {\n          u.getValue(log)('following output to ', { totalCount }, LogLevel.DEBUG)\n          scrollToBottom(followOutputBehavior)\n          pendingScrollHandle = null\n        })\n      }\n    )\n\n    u.subscribe(\n      u.pipe(\n        u.combineLatest(u.duc(followOutput), totalCount, propsReady),\n        u.filter(([follow, , ready]) => follow && ready),\n        u.scan(\n          ({ value }, [, next]) => {\n            return { refreshed: value === next, value: next }\n          },\n          { refreshed: false, value: 0 }\n        ),\n        u.filter(({ refreshed }) => refreshed),\n        u.withLatestFrom(followOutput, totalCount)\n      ),\n      ([, followOutput]) => {\n        const cancel = u.handleNext(atBottomState, (state) => {\n          if (followOutput && !state.atBottom && state.notAtBottomBecause === 'SIZE_INCREASED' && !pendingScrollHandle) {\n            u.getValue(log)('scrolling to bottom due to increased size', {}, LogLevel.DEBUG)\n            scrollToBottom('auto')\n          }\n        })\n        setTimeout(cancel, 100)\n      }\n    )\n\n    u.subscribe(u.combineLatest(u.duc(followOutput), atBottomState), ([followOutput, state]) => {\n      if (followOutput && !state.atBottom && state.notAtBottomBecause === 'VIEWPORT_HEIGHT_DECREASING') {\n        scrollToBottom('auto')\n      }\n    })\n\n    return { followOutput }\n  },\n  u.tup(sizeSystem, stateFlagsSystem, scrollToIndexSystem, initialTopMostItemIndexSystem, propsReadySystem, loggerSystem, domIOSystem)\n)\n","import {\n  combineLatest,\n  connect,\n  distinctUntilChanged,\n  system,\n  filter,\n  map,\n  pipe,\n  prop,\n  stream,\n  streamFromEmitter,\n  tup,\n} from '@virtuoso.dev/urx'\nimport { findMaxKeyValue } from './AATree'\nimport { domIOSystem } from './domIOSystem'\nimport { sizeSystem, hasGroups } from './sizeSystem'\nexport interface GroupIndexesAndCount {\n  totalCount: number\n  groupIndices: number[]\n}\n\nexport function groupCountsToIndicesAndCount(counts: number[]) {\n  return counts.reduce(\n    (acc, groupCount) => {\n      acc.groupIndices.push(acc.totalCount)\n      acc.totalCount += groupCount + 1\n      return acc\n    },\n    {\n      totalCount: 0,\n      groupIndices: [],\n    } as GroupIndexesAndCount\n  )\n}\n\nexport const groupedListSystem = system(([{ totalCount, groupIndices, sizes }, { scrollTop, headerHeight }]) => {\n  const groupCounts = stream<number[]>()\n  const topItemsIndexes = stream<[number]>()\n  const groupIndicesAndCount = streamFromEmitter(pipe(groupCounts, map(groupCountsToIndicesAndCount)))\n  connect(pipe(groupIndicesAndCount, map(prop('totalCount'))), totalCount)\n  connect(pipe(groupIndicesAndCount, map(prop('groupIndices'))), groupIndices)\n\n  connect(\n    pipe(\n      combineLatest(scrollTop, sizes, headerHeight),\n      filter(([_, sizes]) => hasGroups(sizes)),\n      map(([scrollTop, state, headerHeight]) => findMaxKeyValue(state.groupOffsetTree, Math.max(scrollTop - headerHeight, 0), 'v')[0]),\n      distinctUntilChanged(),\n      map((index) => [index])\n    ),\n    topItemsIndexes\n  )\n\n  return { groupCounts, topItemsIndexes }\n}, tup(sizeSystem, domIOSystem))\n","import { ListRange } from './interfaces'\n\nexport function tupleComparator(prev: [any, any] | undefined, current: [any, any]) {\n  return !!(prev && prev[0] === current[0] && prev[1] === current[1])\n}\n\nexport function rangeComparator(prev: ListRange | undefined, next: ListRange) {\n  return !!(prev && prev.startIndex === next.startIndex && prev.endIndex === next.endIndex)\n}\n","import * as u from '@virtuoso.dev/urx'\nimport { domIOSystem } from './domIOSystem'\nimport { UP, DOWN, ScrollDirection } from './stateFlagsSystem'\nimport { tupleComparator } from './comparators'\n\nexport type NumberTuple = [number, number]\nexport type Overscan = number | { main: number; reverse: number }\nexport const TOP = 'top' as const\nexport const BOTTOM = 'bottom' as const\nexport const NONE = 'none' as const\nexport type ListEnd = typeof TOP | typeof BOTTOM\nexport type ViewportIncrease = number | { [k in ListEnd]?: number }\nexport type ChangeDirection = typeof UP | typeof DOWN | typeof NONE\n\nexport function getOverscan(overscan: Overscan, end: ListEnd, direction: ScrollDirection) {\n  if (typeof overscan === 'number') {\n    return (direction === UP && end === TOP) || (direction === DOWN && end === BOTTOM) ? overscan : 0\n  } else {\n    if (direction === UP) {\n      return end === TOP ? overscan.main : overscan.reverse\n    } else {\n      return end === BOTTOM ? overscan.main : overscan.reverse\n    }\n  }\n}\n\nfunction getViewportIncrease(value: ViewportIncrease, end: ListEnd) {\n  return typeof value === 'number' ? value : value[end] || 0\n}\n\nexport const sizeRangeSystem = u.system(\n  ([{ scrollTop, viewportHeight, deviation, headerHeight, fixedHeaderHeight }]) => {\n    const listBoundary = u.stream<NumberTuple>()\n    const topListHeight = u.statefulStream(0)\n    const increaseViewportBy = u.statefulStream<ViewportIncrease>(0)\n    const overscan = u.statefulStream<Overscan>(0)\n\n    const visibleRange = u.statefulStreamFromEmitter(\n      u.pipe(\n        u.combineLatest(\n          u.duc(scrollTop),\n          u.duc(viewportHeight),\n          u.duc(headerHeight),\n          u.duc(listBoundary, tupleComparator),\n          u.duc(overscan),\n          u.duc(topListHeight),\n          u.duc(fixedHeaderHeight),\n          u.duc(deviation),\n          u.duc(increaseViewportBy)\n        ),\n        u.map(\n          ([\n            scrollTop,\n            viewportHeight,\n            headerHeight,\n            [listTop, listBottom],\n            overscan,\n            topListHeight,\n            fixedHeaderHeight,\n            deviation,\n            increaseViewportBy,\n          ]) => {\n            const top = scrollTop - deviation\n            const stickyHeaderHeight = topListHeight + fixedHeaderHeight\n            const headerVisible = Math.max(headerHeight - top, 0)\n            let direction: ChangeDirection = NONE\n            const topViewportAddition = getViewportIncrease(increaseViewportBy, TOP)\n            const bottomViewportAddition = getViewportIncrease(increaseViewportBy, BOTTOM)\n\n            listTop -= deviation\n            listTop += headerHeight + fixedHeaderHeight\n            listBottom += headerHeight + fixedHeaderHeight\n            listBottom -= deviation\n\n            // console.log({ listTop, scrollTop, stickyHeaderHeight, topViewportAddition })\n            if (listTop > scrollTop + stickyHeaderHeight - topViewportAddition) {\n              direction = UP\n            }\n\n            if (listBottom < scrollTop - headerVisible + viewportHeight + bottomViewportAddition) {\n              direction = DOWN\n            }\n\n            if (direction !== NONE) {\n              return [\n                Math.max(top - headerHeight - getOverscan(overscan, TOP, direction) - topViewportAddition, 0),\n                top -\n                  headerVisible -\n                  fixedHeaderHeight +\n                  viewportHeight +\n                  getOverscan(overscan, BOTTOM, direction) +\n                  bottomViewportAddition,\n              ] as NumberTuple\n            }\n\n            return null\n          }\n        ),\n        u.filter((value) => value != null),\n        u.distinctUntilChanged(tupleComparator as any)\n      ),\n      [0, 0]\n    ) as unknown as u.StatefulStream<NumberTuple>\n\n    return {\n      // input\n      listBoundary,\n      overscan,\n      topListHeight,\n      increaseViewportBy,\n\n      // output\n      visibleRange,\n    }\n  },\n  u.tup(domIOSystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { empty, findMaxKeyValue, Range, rangesWithin } from './AATree'\nimport { groupedListSystem } from './groupedListSystem'\nimport { getInitialTopMostItemIndexNumber, initialTopMostItemIndexSystem } from './initialTopMostItemIndexSystem'\nimport { Item, ListItem, ListRange } from './interfaces'\nimport { propsReadySystem } from './propsReadySystem'\nimport { scrollToIndexSystem } from './scrollToIndexSystem'\nimport { sizeRangeSystem } from './sizeRangeSystem'\nimport { Data, originalIndexFromItemIndex, SizeState, sizeSystem, hasGroups, rangesWithinOffsets } from './sizeSystem'\nimport { stateFlagsSystem } from './stateFlagsSystem'\nimport { rangeComparator, tupleComparator } from './comparators'\n\nexport type ListItems = ListItem<unknown>[]\nexport interface TopListState {\n  items: ListItems\n  listHeight: number\n}\n\nexport interface ListState {\n  items: ListItems\n  topItems: ListItems\n  topListHeight: number\n  offsetTop: number\n  offsetBottom: number\n  top: number\n  bottom: number\n  totalCount: number\n}\n\nfunction probeItemSet(index: number, sizes: SizeState, data: Data) {\n  if (hasGroups(sizes)) {\n    const itemIndex = originalIndexFromItemIndex(index, sizes)\n    const groupIndex = findMaxKeyValue(sizes.groupOffsetTree, itemIndex)[0]\n\n    return [\n      { index: groupIndex, size: 0, offset: 0 },\n      { index: itemIndex, size: 0, offset: 0, data: data && data[0] },\n    ]\n  }\n  return [{ index, size: 0, offset: 0, data: data && data[0] }]\n}\n\nconst EMPTY_LIST_STATE: ListState = {\n  items: [] as ListItems,\n  topItems: [] as ListItems,\n  offsetTop: 0,\n  offsetBottom: 0,\n  top: 0,\n  bottom: 0,\n  topListHeight: 0,\n  totalCount: 0,\n}\n\nfunction transposeItems(items: Item<any>[], sizes: SizeState, firstItemIndex: number): ListItems {\n  if (items.length === 0) {\n    return []\n  }\n\n  if (!hasGroups(sizes)) {\n    return items.map((item) => ({ ...item, index: item.index + firstItemIndex, originalIndex: item.index }))\n  }\n\n  const startIndex = items[0].index\n  const endIndex = items[items.length - 1].index\n\n  const transposedItems = [] as ListItems\n  const groupRanges = rangesWithin(sizes.groupOffsetTree, startIndex, endIndex)\n  let currentRange: Range<number> | undefined = undefined\n  let currentGroupIndex = 0\n\n  for (const item of items) {\n    if (!currentRange || currentRange.end < item.index) {\n      currentRange = groupRanges.shift()!\n      currentGroupIndex = sizes.groupIndices.indexOf(currentRange.start)\n    }\n\n    let transposedItem: { type: 'group'; index: number } | { index: number; groupIndex: number }\n\n    if (item.index === currentRange.start) {\n      transposedItem = {\n        type: 'group' as const,\n        index: currentGroupIndex,\n      }\n    } else {\n      transposedItem = {\n        index: item.index - (currentGroupIndex + 1) + firstItemIndex,\n        groupIndex: currentGroupIndex,\n      }\n    }\n\n    transposedItems.push({\n      ...transposedItem,\n      size: item.size,\n      offset: item.offset,\n      originalIndex: item.index,\n      data: item.data,\n    })\n  }\n\n  return transposedItems\n}\n\nexport function buildListState(\n  items: Item<any>[],\n  topItems: Item<any>[],\n  totalCount: number,\n  sizes: SizeState,\n  firstItemIndex: number\n): ListState {\n  const { lastSize, lastOffset, lastIndex } = sizes\n  let offsetTop = 0\n  let bottom = 0\n\n  if (items.length > 0) {\n    offsetTop = items[0].offset\n    const lastItem = items[items.length - 1]\n    bottom = lastItem.offset + lastItem.size\n  }\n\n  const total = lastOffset + (totalCount - lastIndex) * lastSize\n  const top = offsetTop\n  const offsetBottom = total - bottom\n\n  return {\n    items: transposeItems(items, sizes, firstItemIndex),\n    topItems: transposeItems(topItems, sizes, firstItemIndex),\n    topListHeight: topItems.reduce((height, item) => item.size + height, 0),\n    offsetTop,\n    offsetBottom,\n    top,\n    bottom,\n    totalCount,\n  }\n}\n\nexport const listStateSystem = u.system(\n  ([\n    { sizes, totalCount, data, firstItemIndex },\n    groupedListSystem,\n    { visibleRange, listBoundary, topListHeight: rangeTopListHeight },\n    { scrolledToInitialItem, initialTopMostItemIndex },\n    { topListHeight },\n    stateFlags,\n    { didMount },\n  ]) => {\n    const topItemsIndexes = u.statefulStream<Array<number>>([])\n    const itemsRendered = u.stream<ListItems>()\n\n    u.connect(groupedListSystem.topItemsIndexes, topItemsIndexes)\n\n    const listState = u.statefulStreamFromEmitter(\n      u.pipe(\n        u.combineLatest(\n          didMount,\n          u.duc(visibleRange),\n          u.duc(totalCount),\n          u.duc(sizes),\n          u.duc(initialTopMostItemIndex),\n          scrolledToInitialItem,\n          u.duc(topItemsIndexes),\n          u.duc(firstItemIndex),\n          data\n        ),\n        u.filter(([mount]) => mount),\n        u.map(\n          ([\n            ,\n            [startOffset, endOffset],\n            totalCount,\n            sizes,\n            initialTopMostItemIndex,\n            scrolledToInitialItem,\n            topItemsIndexes,\n            firstItemIndex,\n            data,\n          ]) => {\n            const sizesValue = sizes\n            const { sizeTree, offsetTree } = sizesValue\n\n            if (totalCount === 0 || (startOffset === 0 && endOffset === 0)) {\n              return EMPTY_LIST_STATE\n            }\n\n            if (empty(sizeTree)) {\n              return buildListState(\n                probeItemSet(getInitialTopMostItemIndexNumber(initialTopMostItemIndex, totalCount), sizesValue, data),\n                [],\n                totalCount,\n                sizesValue,\n                firstItemIndex\n              )\n            }\n\n            const topItems = [] as Item<any>[]\n\n            if (topItemsIndexes.length > 0) {\n              const startIndex = topItemsIndexes[0]\n              const endIndex = topItemsIndexes[topItemsIndexes.length - 1]\n              let offset = 0\n              for (const range of rangesWithin(sizeTree, startIndex, endIndex)) {\n                const size = range.value\n                const rangeStartIndex = Math.max(range.start, startIndex)\n                const rangeEndIndex = Math.min(range.end, endIndex)\n                for (let i = rangeStartIndex; i <= rangeEndIndex; i++) {\n                  topItems.push({ index: i, size, offset: offset, data: data && data[i] })\n                  offset += size\n                }\n              }\n            }\n\n            // If the list hasn't scrolled to the initial item because the initial item was set,\n            // render empty list.\n            //\n            // This is a condition to be evaluated past the probe check, do not merge\n            // with the totalCount check above\n            if (!scrolledToInitialItem) {\n              return buildListState([], topItems, totalCount, sizesValue, firstItemIndex)\n            }\n\n            const minStartIndex = topItemsIndexes.length > 0 ? topItemsIndexes[topItemsIndexes.length - 1] + 1 : 0\n\n            const offsetPointRanges = rangesWithinOffsets(offsetTree, startOffset, endOffset, minStartIndex)\n            if (offsetPointRanges.length === 0) {\n              return null\n            }\n\n            const maxIndex = totalCount - 1\n\n            const items = u.tap([] as Item<any>[], (result) => {\n              for (const range of offsetPointRanges) {\n                const point = range.value\n                let offset = point.offset\n                let rangeStartIndex = range.start\n                const size = point.size\n\n                if (point.offset < startOffset) {\n                  rangeStartIndex += Math.floor((startOffset - point.offset) / size)\n                  offset += (rangeStartIndex - range.start) * size\n                }\n\n                if (rangeStartIndex < minStartIndex) {\n                  offset += (minStartIndex - rangeStartIndex) * size\n                  rangeStartIndex = minStartIndex\n                }\n\n                const endIndex = Math.min(range.end, maxIndex)\n\n                for (let i = rangeStartIndex; i <= endIndex; i++) {\n                  if (offset >= endOffset) {\n                    break\n                  }\n\n                  result.push({ index: i, size, offset: offset, data: data && data[i] })\n                  offset += size\n                }\n              }\n            })\n\n            return buildListState(items, topItems, totalCount, sizesValue, firstItemIndex)\n          }\n        ),\n        //@ts-expect-error filter needs to be fixed\n        u.filter((value) => value !== null),\n        u.distinctUntilChanged()\n      ),\n      EMPTY_LIST_STATE\n    )\n\n    u.connect(\n      u.pipe(\n        data,\n        u.filter((data) => data !== undefined),\n        u.map((data) => data!.length)\n      ),\n      totalCount\n    )\n\n    u.connect(u.pipe(listState, u.map(u.prop('topListHeight'))), topListHeight)\n    u.connect(topListHeight, rangeTopListHeight)\n\n    u.connect(\n      u.pipe(\n        listState,\n        u.map((state) => [state.top, state.bottom])\n      ),\n      listBoundary\n    )\n\n    u.connect(\n      u.pipe(\n        listState,\n        u.map((state) => state.items)\n      ),\n      itemsRendered\n    )\n\n    const endReached = u.streamFromEmitter(\n      u.pipe(\n        listState,\n        u.filter(({ items }) => items.length > 0),\n        u.withLatestFrom(totalCount, data),\n        u.filter(([{ items }, totalCount]) => items[items.length - 1].originalIndex === totalCount - 1),\n        u.map(([, totalCount, data]) => [totalCount - 1, data] as [number, unknown[]]),\n        u.distinctUntilChanged(tupleComparator),\n        u.map(([count]) => count as number)\n      )\n    )\n\n    const startReached = u.streamFromEmitter(\n      u.pipe(\n        listState,\n        u.throttleTime(200),\n        u.filter(({ items, topItems }) => {\n          return items.length > 0 && items[0].originalIndex === topItems.length\n        }),\n        u.map(({ items }) => items[0].index),\n        u.distinctUntilChanged()\n      )\n    )\n\n    const rangeChanged = u.streamFromEmitter(\n      u.pipe(\n        listState,\n        u.filter(({ items }) => items.length > 0),\n        u.map(({ items }) => {\n          return {\n            startIndex: items[0].index,\n            endIndex: items[items.length - 1].index,\n          } as ListRange\n        }),\n        u.distinctUntilChanged(rangeComparator)\n      )\n    )\n\n    return { listState, topItemsIndexes, endReached, startReached, rangeChanged, itemsRendered, ...stateFlags }\n  },\n  u.tup(\n    sizeSystem,\n    groupedListSystem,\n    sizeRangeSystem,\n    initialTopMostItemIndexSystem,\n    scrollToIndexSystem,\n    stateFlagsSystem,\n    propsReadySystem\n  ),\n  { singleton: true }\n)\n","export function simpleMemoize<T extends () => any>(func: T): T {\n  let called = false\n  let result: unknown\n\n  return (() => {\n    if (!called) {\n      called = true\n      result = func()\n    }\n    return result\n  }) as T\n}\n","import * as u from '@virtuoso.dev/urx'\nimport { listStateSystem, buildListState } from './listStateSystem'\nimport { sizeSystem } from './sizeSystem'\nimport { propsReadySystem } from './propsReadySystem'\n\nexport const initialItemCountSystem = u.system(\n  ([{ sizes, firstItemIndex, data }, { listState }, { didMount }]) => {\n    const initialItemCount = u.statefulStream(0)\n\n    u.connect(\n      u.pipe(\n        didMount,\n        u.withLatestFrom(initialItemCount),\n        u.filter(([, count]) => count !== 0),\n        u.withLatestFrom(sizes, firstItemIndex, data),\n        u.map(([[, count], sizes, firstItemIndex, data = []]) => {\n          let includedGroupsCount = 0\n          if (sizes.groupIndices.length > 0) {\n            for (const index of sizes.groupIndices) {\n              if (index - includedGroupsCount >= count) {\n                break\n              }\n              includedGroupsCount++\n            }\n          }\n          const adjustedCount = count + includedGroupsCount\n          const items = Array.from({ length: adjustedCount }).map((_, index) => ({ index, size: 0, offset: 0, data: data[index] }))\n          return buildListState(items, [], adjustedCount, sizes, firstItemIndex)\n        })\n      ),\n      listState\n    )\n\n    return { initialItemCount }\n  },\n  u.tup(sizeSystem, listStateSystem, propsReadySystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { ListRange } from './interfaces'\nimport { stateFlagsSystem } from './stateFlagsSystem'\nimport { ScrollSeekConfiguration } from './interfaces'\n\nexport const scrollSeekSystem = u.system(\n  ([{ scrollVelocity }]) => {\n    const isSeeking = u.statefulStream(false)\n    const rangeChanged = u.stream<ListRange>()\n    const scrollSeekConfiguration = u.statefulStream<ScrollSeekConfiguration | undefined | false>(false)\n\n    u.connect(\n      u.pipe(\n        scrollVelocity,\n        u.withLatestFrom(scrollSeekConfiguration, isSeeking, rangeChanged),\n        u.filter(([_, config]) => !!config),\n        u.map(([speed, config, isSeeking, range]) => {\n          const { exit, enter } = config as ScrollSeekConfiguration\n          if (isSeeking) {\n            if (exit(speed, range)) {\n              return false\n            }\n          } else {\n            if (enter(speed, range)) {\n              return true\n            }\n          }\n          return isSeeking\n        }),\n        u.distinctUntilChanged()\n      ),\n      isSeeking\n    )\n\n    u.subscribe(\n      u.pipe(u.combineLatest(isSeeking, scrollVelocity, rangeChanged), u.withLatestFrom(scrollSeekConfiguration)),\n      ([[isSeeking, velocity, range], config]) => isSeeking && config && config.change && config.change(velocity, range)\n    )\n\n    return { isSeeking, scrollSeekConfiguration, scrollVelocity, scrollSeekRangeChanged: rangeChanged }\n  },\n  u.tup(stateFlagsSystem),\n  { singleton: true }\n)\n","import { connect, system, map, pipe, statefulStream, tup, filter } from '@virtuoso.dev/urx'\nimport { listStateSystem } from './listStateSystem'\n\nexport const topItemCountSystem = system(([{ topItemsIndexes }]) => {\n  const topItemCount = statefulStream(0)\n\n  connect(\n    pipe(\n      topItemCount,\n      filter((length) => length > 0),\n      map((length) => Array.from({ length }).map((_, index) => index))\n    ),\n    topItemsIndexes\n  )\n  return { topItemCount }\n}, tup(listStateSystem))\n","import * as u from '@virtuoso.dev/urx'\nimport { listStateSystem } from './listStateSystem'\nimport { domIOSystem } from './domIOSystem'\n\nexport const totalListHeightSystem = u.system(\n  ([{ footerHeight, headerHeight, fixedHeaderHeight }, { listState }]) => {\n    const totalListHeightChanged = u.stream<number>()\n    const totalListHeight = u.statefulStreamFromEmitter(\n      u.pipe(\n        u.combineLatest(footerHeight, headerHeight, fixedHeaderHeight, listState),\n        u.map(([footerHeight, headerHeight, fixedHeaderHeight, listState]) => {\n          return footerHeight + headerHeight + fixedHeaderHeight + listState.offsetBottom + listState.bottom\n        })\n      ),\n      0\n    )\n\n    u.connect(u.duc(totalListHeight), totalListHeightChanged)\n\n    return { totalListHeight, totalListHeightChanged }\n  },\n  u.tup(domIOSystem, listStateSystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { domIOSystem } from './domIOSystem'\nimport { listStateSystem } from './listStateSystem'\nimport { sizeSystem } from './sizeSystem'\nimport { UP, stateFlagsSystem } from './stateFlagsSystem'\nimport { ListItem } from './interfaces'\nimport { loggerSystem, LogLevel } from './loggerSystem'\n\ntype UpwardFixState = [number, ListItem<any>[], number, number]\n/**\n * Fixes upward scrolling by calculating and compensation from changed item heights, using scrollBy.\n */\nexport const upwardScrollFixSystem = u.system(\n  ([\n    { scrollBy, scrollTop, deviation, scrollingInProgress },\n    { isScrolling, isAtBottom, atBottomState, scrollDirection, lastJumpDueToItemResize },\n    { listState },\n    { beforeUnshiftWith, shiftWithOffset, sizes },\n    { log },\n  ]) => {\n    const deviationOffset = u.streamFromEmitter(\n      u.pipe(\n        listState,\n        u.withLatestFrom(lastJumpDueToItemResize),\n        u.scan(\n          ([, prevItems, prevTotalCount, prevTotalHeight], [{ items, totalCount, bottom, offsetBottom }, lastJumpDueToItemResize]) => {\n            const totalHeight = bottom + offsetBottom\n\n            let newDev = 0\n            if (prevTotalCount === totalCount) {\n              if (prevItems.length > 0 && items.length > 0) {\n                const atStart = items[0].originalIndex === 0 && prevItems[0].originalIndex === 0\n                if (!atStart) {\n                  newDev = totalHeight - prevTotalHeight\n                  if (newDev !== 0) {\n                    newDev += lastJumpDueToItemResize\n                  }\n                }\n              }\n            }\n\n            return [newDev, items, totalCount, totalHeight] as UpwardFixState\n          },\n          [0, [], 0, 0] as UpwardFixState\n        ),\n        u.filter(([amount]) => amount !== 0),\n        u.withLatestFrom(scrollTop, scrollDirection, scrollingInProgress, log, isAtBottom, atBottomState),\n        u.filter(([, scrollTop, scrollDirection, scrollingInProgress]) => {\n          // console.log({ amount, scrollTop, scrollDirection, scrollingInProgress, isAtBottom, atBottomState })\n          return !scrollingInProgress && scrollTop !== 0 && scrollDirection === UP // && (isAtBottom ? amount > 0 : true)\n        }),\n        u.map(([[amount], , , , log]) => {\n          log('Upward scrolling compensation', { amount }, LogLevel.DEBUG)\n          return amount\n        })\n      )\n    )\n\n    u.connect(\n      u.pipe(\n        deviationOffset,\n        u.withLatestFrom(deviation),\n        u.map(([amount, deviation]) => deviation - amount)\n      ),\n      deviation\n    )\n\n    // when the browser stops scrolling,\n    // restore the position and reset the glitching\n    u.subscribe(\n      u.pipe(\n        u.combineLatest(u.statefulStreamFromEmitter(isScrolling, false), deviation),\n        u.filter(([is, deviation]) => !is && deviation !== 0),\n        u.map(([_, deviation]) => deviation),\n        u.throttleTime(1)\n      ),\n      (offset) => {\n        if (offset > 0) {\n          u.publish(scrollBy, { top: -offset, behavior: 'auto' })\n          u.publish(deviation, 0)\n        } else {\n          u.publish(deviation, 0)\n          u.publish(scrollBy, { top: -offset, behavior: 'auto' })\n        }\n      }\n    )\n\n    u.connect(\n      u.pipe(\n        shiftWithOffset,\n        u.map((offset) => {\n          return { top: -offset }\n        })\n      ),\n      scrollBy\n    )\n\n    u.connect(\n      u.pipe(\n        beforeUnshiftWith,\n        u.withLatestFrom(sizes),\n        u.map(([offset, { lastSize }]) => offset * lastSize)\n      ),\n      deviationOffset\n    )\n\n    return { deviation }\n  },\n  u.tup(domIOSystem, stateFlagsSystem, listStateSystem, sizeSystem, loggerSystem)\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { totalListHeightSystem } from './totalListHeightSystem'\nimport { propsReadySystem } from './propsReadySystem'\nimport { domIOSystem } from './domIOSystem'\n\nexport const initialScrollTopSystem = u.system(\n  ([{ totalListHeight }, { didMount }, { scrollTo }]) => {\n    const initialScrollTop = u.statefulStream(0)\n\n    u.subscribe(\n      u.pipe(\n        didMount,\n        u.withLatestFrom(initialScrollTop),\n        u.filter(([, offset]) => offset !== 0),\n        u.map(([, offset]) => ({ top: offset }))\n      ),\n      (location) => {\n        u.handleNext(\n          u.pipe(\n            totalListHeight,\n            u.filter((val) => val !== 0)\n          ),\n          () => {\n            setTimeout(() => {\n              u.publish(scrollTo, location)\n            })\n          }\n        )\n      }\n    )\n\n    return {\n      initialScrollTop,\n    }\n  },\n  u.tup(totalListHeightSystem, propsReadySystem, domIOSystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { totalListHeightSystem } from './totalListHeightSystem'\nimport { domIOSystem } from './domIOSystem'\n\nexport const alignToBottomSystem = u.system(\n  ([{ viewportHeight }, { totalListHeight }]) => {\n    const alignToBottom = u.statefulStream(false)\n\n    const paddingTopAddition = u.statefulStreamFromEmitter(\n      u.pipe(\n        u.combineLatest(alignToBottom, viewportHeight, totalListHeight),\n        u.filter(([enabled]) => enabled),\n        u.map(([, viewportHeight, totalListHeight]) => {\n          return Math.max(0, viewportHeight - totalListHeight)\n        }),\n        u.distinctUntilChanged()\n      ),\n      0\n    )\n\n    return { alignToBottom, paddingTopAddition }\n  },\n  u.tup(domIOSystem, totalListHeightSystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { domIOSystem } from './domIOSystem'\nimport { WindowViewportInfo, ScrollContainerState } from './interfaces'\n\nexport const windowScrollerSystem = u.system(([{ scrollTo, scrollContainerState }]) => {\n  const windowScrollContainerState = u.stream<ScrollContainerState>()\n  const windowViewportRect = u.stream<WindowViewportInfo>()\n  const windowScrollTo = u.stream<ScrollToOptions>()\n  const useWindowScroll = u.statefulStream(false)\n  const customScrollParent = u.statefulStream<HTMLElement | undefined>(undefined)\n\n  u.connect(\n    u.pipe(\n      u.combineLatest(windowScrollContainerState, windowViewportRect),\n      u.map(([{ viewportHeight, scrollTop: windowScrollTop, scrollHeight }, { offsetTop }]) => {\n        return {\n          scrollTop: Math.max(0, windowScrollTop - offsetTop),\n          scrollHeight,\n          viewportHeight,\n        }\n      })\n    ),\n    scrollContainerState\n  )\n\n  u.connect(\n    u.pipe(\n      scrollTo,\n      u.withLatestFrom(windowViewportRect),\n      u.map(([scrollTo, { offsetTop }]) => {\n        return {\n          ...scrollTo,\n          top: scrollTo.top! + offsetTop,\n        }\n      })\n    ),\n    windowScrollTo\n  )\n\n  return {\n    // config\n    useWindowScroll,\n    customScrollParent,\n\n    // input\n    windowScrollContainerState,\n    windowViewportRect,\n\n    // signals\n    windowScrollTo,\n  }\n}, u.tup(domIOSystem))\n","import * as u from '@virtuoso.dev/urx'\nimport { findMaxKeyValue } from './AATree'\nimport { domIOSystem } from './domIOSystem'\nimport { offsetOf, originalIndexFromLocation, sizeSystem } from './sizeSystem'\nimport { loggerSystem } from './loggerSystem'\nimport { scrollToIndexSystem } from './scrollToIndexSystem'\nimport { listStateSystem } from './listStateSystem'\nimport { ScrollIntoViewLocation } from './interfaces'\n\nexport const scrollIntoViewSystem = u.system(\n  ([{ sizes, totalCount }, { scrollTop, viewportHeight, headerHeight, scrollingInProgress }, { scrollToIndex }]) => {\n    const scrollIntoView = u.stream<ScrollIntoViewLocation>()\n\n    u.connect(\n      u.pipe(\n        scrollIntoView,\n        u.withLatestFrom(sizes, viewportHeight, totalCount, headerHeight, scrollTop),\n        u.map(([viewLocation, sizes, viewportHeight, totalCount, headerHeight, scrollTop]) => {\n          const { done, behavior, ...rest } = viewLocation\n          let location = null\n          const actualIndex = originalIndexFromLocation(viewLocation, sizes, totalCount - 1)\n\n          const itemTop = offsetOf(actualIndex, sizes.offsetTree) + headerHeight\n          if (itemTop < scrollTop) {\n            location = { ...rest, behavior, align: 'start' }\n          } else {\n            const itemBottom = itemTop + findMaxKeyValue(sizes.sizeTree, actualIndex)[1]!\n\n            if (itemBottom > scrollTop + viewportHeight) {\n              location = { ...rest, behavior, align: 'end' }\n            }\n          }\n\n          if (location) {\n            done &&\n              u.handleNext(\n                u.pipe(\n                  scrollingInProgress,\n                  u.skip(1),\n                  u.filter((value) => value === false)\n                ),\n                done\n              )\n          } else {\n            done && done()\n          }\n\n          return location\n        }),\n        u.filter((value) => value !== null)\n      ),\n      scrollToIndex\n    )\n\n    return {\n      scrollIntoView,\n    }\n  },\n  u.tup(sizeSystem, domIOSystem, scrollToIndexSystem, listStateSystem, loggerSystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { domIOSystem } from './domIOSystem'\nimport { followOutputSystem } from './followOutputSystem'\nimport { groupedListSystem } from './groupedListSystem'\nimport { initialItemCountSystem } from './initialItemCountSystem'\nimport { initialTopMostItemIndexSystem } from './initialTopMostItemIndexSystem'\nimport { listStateSystem } from './listStateSystem'\nimport { propsReadySystem } from './propsReadySystem'\nimport { scrollSeekSystem } from './scrollSeekSystem'\nimport { scrollToIndexSystem } from './scrollToIndexSystem'\nimport { sizeRangeSystem } from './sizeRangeSystem'\nimport { sizeSystem } from './sizeSystem'\nimport { topItemCountSystem } from './topItemCountSystem'\nimport { totalListHeightSystem } from './totalListHeightSystem'\nimport { upwardScrollFixSystem } from './upwardScrollFixSystem'\nimport { initialScrollTopSystem } from './initialScrollTopSystem'\nimport { alignToBottomSystem } from './alignToBottomSystem'\nimport { windowScrollerSystem } from './windowScrollerSystem'\nimport { loggerSystem } from './loggerSystem'\nimport { scrollIntoViewSystem } from './scrollIntoViewSystem'\n\n// workaround the growing list of systems below\n// fix this with 4.1 recursive conditional types\nconst featureGroup1System = u.system(\n  ([\n    sizeRange,\n    initialItemCount,\n    propsReady,\n    scrollSeek,\n    totalListHeight,\n    initialScrollTopSystem,\n    alignToBottom,\n    windowScroller,\n    scrollIntoView,\n  ]) => {\n    return {\n      ...sizeRange,\n      ...initialItemCount,\n      ...propsReady,\n      ...scrollSeek,\n      ...totalListHeight,\n      ...initialScrollTopSystem,\n      ...alignToBottom,\n      ...windowScroller,\n      ...scrollIntoView,\n    }\n  },\n  u.tup(\n    sizeRangeSystem,\n    initialItemCountSystem,\n    propsReadySystem,\n    scrollSeekSystem,\n    totalListHeightSystem,\n    initialScrollTopSystem,\n    alignToBottomSystem,\n    windowScrollerSystem,\n    scrollIntoViewSystem\n  )\n)\n\nexport const listSystem = u.system(\n  ([\n    {\n      totalCount,\n      sizeRanges,\n      fixedItemSize,\n      defaultItemSize,\n      trackItemSizes,\n      itemSize,\n      data,\n      firstItemIndex,\n      groupIndices,\n      statefulTotalCount,\n    },\n    { initialTopMostItemIndex, scrolledToInitialItem },\n    domIO,\n    followOutput,\n    { listState, topItemsIndexes, ...flags },\n    { scrollToIndex },\n    _,\n    { topItemCount },\n    { groupCounts },\n    featureGroup1,\n    log,\n  ]) => {\n    u.connect(flags.rangeChanged, featureGroup1.scrollSeekRangeChanged)\n    u.connect(u.pipe(featureGroup1.windowViewportRect, u.map(u.prop('visibleHeight'))), domIO.viewportHeight)\n\n    return {\n      // input\n      totalCount,\n      data,\n      firstItemIndex,\n      sizeRanges,\n      initialTopMostItemIndex,\n      scrolledToInitialItem,\n      topItemsIndexes,\n      topItemCount,\n      groupCounts,\n      fixedItemHeight: fixedItemSize,\n      defaultItemHeight: defaultItemSize,\n      ...followOutput,\n\n      // output\n      statefulTotalCount,\n      listState,\n      scrollToIndex,\n      trackItemSizes,\n      itemSize,\n      groupIndices,\n\n      // exported from stateFlagsSystem\n      ...flags,\n      // the bag of IO from featureGroup1System\n      ...featureGroup1,\n      ...domIO,\n      ...log,\n    }\n  },\n  u.tup(\n    sizeSystem,\n    initialTopMostItemIndexSystem,\n    domIOSystem,\n    followOutputSystem,\n    listStateSystem,\n    scrollToIndexSystem,\n    upwardScrollFixSystem,\n    topItemCountSystem,\n    groupedListSystem,\n    featureGroup1System,\n    loggerSystem\n  )\n)\n","import { simpleMemoize } from './simpleMemoize'\n\nconst WEBKIT_STICKY = '-webkit-sticky'\nconst STICKY = 'sticky'\n\nexport const positionStickyCssValue = simpleMemoize(() => {\n  if (typeof document === 'undefined') {\n    return STICKY\n  }\n  const node = document.createElement('div')\n  node.style.position = WEBKIT_STICKY\n  return node.style.position === WEBKIT_STICKY ? WEBKIT_STICKY : STICKY\n})\n","import { useEffect, useRef, useCallback } from 'react'\nimport { useSizeWithElRef } from './useSize'\nimport { WindowViewportInfo } from '../interfaces'\n\nexport default function useWindowViewportRectRef(callback: (info: WindowViewportInfo) => void, customScrollParent?: HTMLElement) {\n  const viewportInfo = useRef<WindowViewportInfo | null>(null)\n\n  const calculateInfo = useCallback(\n    (element: HTMLElement | null) => {\n      if (element === null) {\n        return\n      }\n      const rect = element.getBoundingClientRect()\n      const visibleWidth = rect.width\n      let visibleHeight: number, offsetTop: number\n\n      if (customScrollParent) {\n        const customScrollParentRect = customScrollParent.getBoundingClientRect()\n        const deltaTop = rect.top - customScrollParentRect.top\n\n        visibleHeight = customScrollParentRect.height - Math.max(0, deltaTop)\n        offsetTop = deltaTop + customScrollParent.scrollTop\n      } else {\n        visibleHeight = window.innerHeight - Math.max(0, rect.top)\n        offsetTop = rect.top + window.pageYOffset\n      }\n\n      viewportInfo.current = {\n        offsetTop,\n        visibleHeight,\n        visibleWidth,\n      }\n\n      callback(viewportInfo.current)\n    },\n    [callback, customScrollParent]\n  )\n\n  const { callbackRef, ref } = useSizeWithElRef(calculateInfo)\n\n  const scrollAndResizeEventHandler = useCallback(() => {\n    calculateInfo(ref.current)\n  }, [calculateInfo, ref])\n\n  useEffect(() => {\n    if (customScrollParent) {\n      customScrollParent.addEventListener('scroll', scrollAndResizeEventHandler)\n      const observer = new ResizeObserver(scrollAndResizeEventHandler)\n      observer.observe(customScrollParent)\n      return () => {\n        customScrollParent.removeEventListener('scroll', scrollAndResizeEventHandler)\n        observer.unobserve(customScrollParent)\n      }\n    } else {\n      window.addEventListener('scroll', scrollAndResizeEventHandler)\n      window.addEventListener('resize', scrollAndResizeEventHandler)\n      return () => {\n        window.removeEventListener('scroll', scrollAndResizeEventHandler)\n        window.removeEventListener('resize', scrollAndResizeEventHandler)\n      }\n    }\n  }, [scrollAndResizeEventHandler, customScrollParent])\n\n  return callbackRef\n}\n","import { RefHandle, systemToComponent } from '@virtuoso.dev/react-urx'\nimport {\n  compose,\n  connect,\n  getValue,\n  map,\n  pipe,\n  publish,\n  statefulStream,\n  stream,\n  Stream,\n  subscribe,\n  system,\n  tup,\n  withLatestFrom,\n  statefulStreamFromEmitter,\n  distinctUntilChanged,\n  noop,\n} from '@virtuoso.dev/urx'\nimport * as React from 'react'\nimport { ComponentType, createElement, CSSProperties, FC, PropsWithChildren } from 'react'\nimport useIsomorphicLayoutEffect from './hooks/useIsomorphicLayoutEffect'\nimport useChangedListContentsSizes from './hooks/useChangedChildSizes'\nimport useScrollTop from './hooks/useScrollTop'\nimport useSize from './hooks/useSize'\nimport { Components, ComputeItemKey, GroupContent, GroupItemContent, ItemContent, ListRootProps } from './interfaces'\nimport { listSystem } from './listSystem'\nimport { positionStickyCssValue } from './utils/positionStickyCssValue'\nimport useWindowViewportRectRef from './hooks/useWindowViewportRect'\nimport { correctItemSize } from './utils/correctItemSize'\nimport { ScrollerProps } from '.'\n\nexport function identity<T>(value: T) {\n  return value\n}\n\nconst listComponentPropsSystem = system(() => {\n  const itemContent = statefulStream<ItemContent<any, any> | GroupItemContent<any, any>>((index: number) => `Item ${index}`)\n  const context = statefulStream<unknown>(null)\n  const groupContent = statefulStream<GroupContent>((index: number) => `Group ${index}`)\n  const components = statefulStream<Components<any>>({})\n  const computeItemKey = statefulStream<ComputeItemKey<any, any>>(identity)\n  const headerFooterTag = statefulStream('div')\n  const scrollerRef = statefulStream<(ref: HTMLElement | Window | null) => void>(noop)\n\n  const distinctProp = <K extends keyof Components<any>>(propName: K, defaultValue: Components<any>[K] | null | 'div' = null) => {\n    return statefulStreamFromEmitter(\n      pipe(\n        components,\n        map((components) => components[propName]),\n        distinctUntilChanged()\n      ),\n      defaultValue\n    )\n  }\n\n  return {\n    context,\n    itemContent,\n    groupContent,\n    components,\n    computeItemKey,\n    headerFooterTag,\n    scrollerRef,\n    FooterComponent: distinctProp('Footer'),\n    HeaderComponent: distinctProp('Header'),\n    TopItemListComponent: distinctProp('TopItemList'),\n    ListComponent: distinctProp('List', 'div'),\n    ItemComponent: distinctProp('Item', 'div'),\n    GroupComponent: distinctProp('Group', 'div'),\n    ScrollerComponent: distinctProp('Scroller', 'div'),\n    EmptyPlaceholder: distinctProp('EmptyPlaceholder'),\n    ScrollSeekPlaceholder: distinctProp('ScrollSeekPlaceholder'),\n  }\n})\n\nexport function addDeprecatedAlias<T>(prop: Stream<T>, message: string) {\n  const alias = stream<T>()\n  subscribe(alias, () =>\n    console.warn(`react-virtuoso: You are using a deprecated property. ${message}`, 'color: red;', 'color: inherit;', 'color: blue;')\n  )\n  connect(alias, prop)\n  return alias\n}\n\nconst combinedSystem = system(([listSystem, propsSystem]) => {\n  const deprecatedProps = {\n    item: addDeprecatedAlias(propsSystem.itemContent, 'Rename the %citem%c prop to %citemContent.'),\n    group: addDeprecatedAlias(propsSystem.groupContent, 'Rename the %cgroup%c prop to %cgroupContent.'),\n    topItems: addDeprecatedAlias(listSystem.topItemCount, 'Rename the %ctopItems%c prop to %ctopItemCount.'),\n    itemHeight: addDeprecatedAlias(listSystem.fixedItemHeight, 'Rename the %citemHeight%c prop to %cfixedItemHeight.'),\n    scrollingStateChange: addDeprecatedAlias(listSystem.isScrolling, 'Rename the %cscrollingStateChange%c prop to %cisScrolling.'),\n    adjustForPrependedItems: stream<any>(),\n    maxHeightCacheSize: stream<any>(),\n    footer: stream<any>(),\n    header: stream<any>(),\n    HeaderContainer: stream<any>(),\n    FooterContainer: stream<any>(),\n    ItemContainer: stream<any>(),\n    ScrollContainer: stream<any>(),\n    GroupContainer: stream<any>(),\n    ListContainer: stream<any>(),\n    emptyComponent: stream<any>(),\n    scrollSeek: stream<any>(),\n  }\n\n  subscribe(deprecatedProps.adjustForPrependedItems, () => {\n    console.warn(\n      `react-virtuoso: adjustForPrependedItems is no longer supported. Use the firstItemIndex property instead - https://virtuoso.dev/prepend-items.`,\n      'color: red;',\n      'color: inherit;',\n      'color: blue;'\n    )\n  })\n\n  subscribe(deprecatedProps.maxHeightCacheSize, () => {\n    console.warn(`react-virtuoso: maxHeightCacheSize is no longer necessary. Setting it has no effect - remove it from your code.`)\n  })\n\n  subscribe(deprecatedProps.HeaderContainer, () => {\n    console.warn(\n      `react-virtuoso: HeaderContainer is deprecated. Use headerFooterTag if you want to change the wrapper of the header component and pass components.Header to change its contents.`\n    )\n  })\n\n  subscribe(deprecatedProps.FooterContainer, () => {\n    console.warn(\n      `react-virtuoso: FooterContainer is deprecated. Use headerFooterTag if you want to change the wrapper of the footer component and pass components.Footer to change its contents.`\n    )\n  })\n\n  function deprecateComponentProp(stream: Stream<any>, componentName: string, propName: string) {\n    connect(\n      pipe(\n        stream,\n        withLatestFrom(propsSystem.components),\n        map(([comp, components]) => {\n          console.warn(`react-virtuoso: ${propName} property is deprecated. Pass components.${componentName} instead.`)\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n          return { ...components, [componentName]: comp }\n        })\n      ),\n      propsSystem.components\n    )\n  }\n\n  subscribe(deprecatedProps.scrollSeek, ({ placeholder, ...config }) => {\n    console.warn(\n      `react-virtuoso: scrollSeek property is deprecated. Pass scrollSeekConfiguration and specify the placeholder in components.ScrollSeekPlaceholder instead.`\n    )\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    publish(propsSystem.components, { ...getValue(propsSystem.components), ScrollSeekPlaceholder: placeholder })\n    publish(listSystem.scrollSeekConfiguration, config)\n  })\n\n  deprecateComponentProp(deprecatedProps.footer, 'Footer', 'footer')\n  deprecateComponentProp(deprecatedProps.header, 'Header', 'header')\n  deprecateComponentProp(deprecatedProps.ItemContainer, 'Item', 'ItemContainer')\n  deprecateComponentProp(deprecatedProps.ListContainer, 'List', 'ListContainer')\n  deprecateComponentProp(deprecatedProps.ScrollContainer, 'Scroller', 'ScrollContainer')\n  deprecateComponentProp(deprecatedProps.emptyComponent, 'EmptyPlaceholder', 'emptyComponent')\n  deprecateComponentProp(deprecatedProps.GroupContainer, 'Group', 'GroupContainer')\n\n  return { ...listSystem, ...propsSystem, ...deprecatedProps }\n}, tup(listSystem, listComponentPropsSystem))\n\nconst DefaultScrollSeekPlaceholder = ({ height }: { height: number }) => <div style={{ height }}></div>\n\nconst GROUP_STYLE = { position: positionStickyCssValue(), zIndex: 1, overflowAnchor: 'none' }\nconst ITEM_STYLE = { overflowAnchor: 'none' }\n\nexport const Items = React.memo(function VirtuosoItems({ showTopList = false }: { showTopList?: boolean }) {\n  const listState = useEmitterValue('listState')\n\n  const sizeRanges = usePublisher('sizeRanges')\n  const useWindowScroll = useEmitterValue('useWindowScroll')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const windowScrollContainerStateCallback = usePublisher('windowScrollContainerState')\n  const _scrollContainerStateCallback = usePublisher('scrollContainerState')\n  const scrollContainerStateCallback =\n    customScrollParent || useWindowScroll ? windowScrollContainerStateCallback : _scrollContainerStateCallback\n  const itemContent = useEmitterValue('itemContent')\n  const context = useEmitterValue('context')\n  const groupContent = useEmitterValue('groupContent')\n  const trackItemSizes = useEmitterValue('trackItemSizes')\n  const itemSize = useEmitterValue('itemSize')\n  const log = useEmitterValue('log')\n\n  const { callbackRef, ref } = useChangedListContentsSizes(\n    sizeRanges,\n    itemSize,\n    trackItemSizes,\n    showTopList ? noop : scrollContainerStateCallback,\n    log,\n    customScrollParent\n  )\n\n  const [deviation, setDeviation] = React.useState(0)\n  useEmitter('deviation', (value) => {\n    if (deviation !== value) {\n      ref.current!.style.marginTop = `${value}px`\n      setDeviation(value)\n    }\n  })\n\n  const EmptyPlaceholder = useEmitterValue('EmptyPlaceholder')\n  const ScrollSeekPlaceholder = useEmitterValue('ScrollSeekPlaceholder') || DefaultScrollSeekPlaceholder\n  const ListComponent = useEmitterValue('ListComponent')!\n  const ItemComponent = useEmitterValue('ItemComponent')!\n  const GroupComponent = useEmitterValue('GroupComponent')!\n  const computeItemKey = useEmitterValue('computeItemKey')\n  const isSeeking = useEmitterValue('isSeeking')\n  const hasGroups = useEmitterValue('groupIndices').length > 0\n  const paddingTopAddition = useEmitterValue('paddingTopAddition')\n  const firstItemIndex = useEmitterValue('firstItemIndex')\n  const statefulTotalCount = useEmitterValue('statefulTotalCount')\n\n  const containerStyle: CSSProperties = showTopList\n    ? {}\n    : {\n        boxSizing: 'border-box',\n        paddingTop: listState.offsetTop + paddingTopAddition,\n        paddingBottom: listState.offsetBottom,\n        marginTop: deviation,\n      }\n\n  if (!showTopList && statefulTotalCount === 0 && EmptyPlaceholder) {\n    return createElement(EmptyPlaceholder, contextPropIfNotDomElement(EmptyPlaceholder, context))\n  }\n\n  return createElement(\n    ListComponent,\n    {\n      ...contextPropIfNotDomElement(ListComponent, context),\n      ref: callbackRef,\n      style: containerStyle,\n      'data-test-id': showTopList ? 'virtuoso-top-item-list' : 'virtuoso-item-list',\n    },\n    (showTopList ? listState.topItems : listState.items).map((item) => {\n      const index = item.originalIndex!\n      const key = computeItemKey(index + firstItemIndex, item.data, context)\n\n      if (isSeeking) {\n        return createElement(ScrollSeekPlaceholder, {\n          ...contextPropIfNotDomElement(ScrollSeekPlaceholder, context),\n          key,\n          index: item.index,\n          height: item.size,\n          type: item.type || 'item',\n          ...(item.type === 'group' ? {} : { groupIndex: item.groupIndex }),\n        })\n      }\n\n      if (item.type === 'group') {\n        return createElement(\n          GroupComponent,\n          {\n            ...contextPropIfNotDomElement(GroupComponent, context),\n            key,\n            'data-index': index,\n            'data-known-size': item.size,\n            'data-item-index': item.index,\n            style: GROUP_STYLE,\n          } as any,\n          groupContent(item.index)\n        )\n      } else {\n        return createElement(\n          ItemComponent,\n          {\n            ...contextPropIfNotDomElement(ItemComponent, context),\n            key,\n            'data-index': index,\n            'data-known-size': item.size,\n            'data-item-index': item.index,\n            'data-item-group-index': item.groupIndex,\n            style: ITEM_STYLE,\n          } as any,\n          hasGroups\n            ? (itemContent as GroupItemContent<any, any>)(item.index, item.groupIndex!, item.data, context)\n            : (itemContent as ItemContent<any, any>)(item.index, item.data, context)\n        )\n      }\n    })\n  )\n})\n\nexport const scrollerStyle: CSSProperties = {\n  height: '100%',\n  outline: 'none',\n  overflowY: 'auto',\n  position: 'relative',\n  WebkitOverflowScrolling: 'touch',\n}\n\nexport const viewportStyle: CSSProperties = {\n  width: '100%',\n  height: '100%',\n  position: 'absolute',\n  top: 0,\n}\n\nconst topItemListStyle: CSSProperties = {\n  width: '100%',\n  position: positionStickyCssValue(),\n  top: 0,\n}\n\nexport function contextPropIfNotDomElement(element: unknown, context: unknown) {\n  if (typeof element === 'string') {\n    return undefined\n  }\n  return { context }\n}\n\nconst Header: FC = React.memo(function VirtuosoHeader() {\n  const Header = useEmitterValue('HeaderComponent')\n  const headerHeight = usePublisher('headerHeight')\n  const headerFooterTag = useEmitterValue('headerFooterTag')\n  const ref = useSize((el) => headerHeight(correctItemSize(el, 'height')))\n  const context = useEmitterValue('context')\n  return Header ? createElement(headerFooterTag, { ref }, createElement(Header, contextPropIfNotDomElement(Header, context))) : null\n})\n\nconst Footer: FC = React.memo(function VirtuosoFooter() {\n  const Footer = useEmitterValue('FooterComponent')\n  const footerHeight = usePublisher('footerHeight')\n  const headerFooterTag = useEmitterValue('headerFooterTag')\n  const ref = useSize((el) => footerHeight(correctItemSize(el, 'height')))\n  const context = useEmitterValue('context')\n  return Footer ? createElement(headerFooterTag, { ref }, createElement(Footer, contextPropIfNotDomElement(Footer, context))) : null\n})\n\nexport interface Hooks {\n  usePublisher: typeof usePublisher\n  useEmitterValue: typeof useEmitterValue\n  useEmitter: typeof useEmitter\n}\n\nexport function buildScroller({ usePublisher, useEmitter, useEmitterValue }: Hooks) {\n  const Scroller: ComponentType<ScrollerProps> = React.memo(function VirtuosoScroller({ style, children, ...props }) {\n    const scrollContainerStateCallback = usePublisher('scrollContainerState')\n    const ScrollerComponent = useEmitterValue('ScrollerComponent')!\n    const smoothScrollTargetReached = usePublisher('smoothScrollTargetReached')\n    const scrollerRefCallback = useEmitterValue('scrollerRef')\n    const context = useEmitterValue('context')\n\n    const { scrollerRef, scrollByCallback, scrollToCallback } = useScrollTop(\n      scrollContainerStateCallback,\n      smoothScrollTargetReached,\n      ScrollerComponent,\n      scrollerRefCallback\n    )\n\n    useEmitter('scrollTo', scrollToCallback)\n    useEmitter('scrollBy', scrollByCallback)\n    return createElement(\n      ScrollerComponent,\n      {\n        ref: scrollerRef as React.MutableRefObject<HTMLDivElement | null>,\n        style: { ...scrollerStyle, ...style },\n        'data-test-id': 'virtuoso-scroller',\n        'data-virtuoso-scroller': true,\n        tabIndex: 0,\n        ...props,\n        ...contextPropIfNotDomElement(ScrollerComponent, context),\n      },\n      children\n    )\n  })\n  return Scroller\n}\n\nexport function buildWindowScroller({ usePublisher, useEmitter, useEmitterValue }: Hooks) {\n  const Scroller: Components['Scroller'] = React.memo(function VirtuosoWindowScroller({ style, children, ...props }) {\n    const scrollContainerStateCallback = usePublisher('windowScrollContainerState')\n    const ScrollerComponent = useEmitterValue('ScrollerComponent')!\n    const smoothScrollTargetReached = usePublisher('smoothScrollTargetReached')\n    const totalListHeight = useEmitterValue('totalListHeight')\n    const deviation = useEmitterValue('deviation')\n    const customScrollParent = useEmitterValue('customScrollParent')\n    const context = useEmitterValue('context')\n    const { scrollerRef, scrollByCallback, scrollToCallback } = useScrollTop(\n      scrollContainerStateCallback,\n      smoothScrollTargetReached,\n      ScrollerComponent,\n      noop,\n      customScrollParent\n    )\n\n    useIsomorphicLayoutEffect(() => {\n      scrollerRef.current = customScrollParent ? customScrollParent : window\n      return () => {\n        scrollerRef.current = null\n      }\n    }, [scrollerRef, customScrollParent])\n\n    useEmitter('windowScrollTo', scrollToCallback)\n    useEmitter('scrollBy', scrollByCallback)\n    return createElement(\n      ScrollerComponent,\n      {\n        style: { position: 'relative', ...style, ...(totalListHeight !== 0 ? { height: totalListHeight + deviation } : {}) },\n        'data-virtuoso-scroller': true,\n        ...props,\n        ...contextPropIfNotDomElement(ScrollerComponent, context),\n      },\n      children\n    )\n  })\n  return Scroller\n}\n\nconst Viewport: FC<PropsWithChildren<unknown>> = ({ children }) => {\n  const viewportHeight = usePublisher('viewportHeight')\n  const viewportRef = useSize(compose(viewportHeight, (el) => correctItemSize(el, 'height')))\n\n  return (\n    <div style={viewportStyle} ref={viewportRef} data-viewport-type=\"element\">\n      {children}\n    </div>\n  )\n}\n\nconst WindowViewport: FC<PropsWithChildren<unknown>> = ({ children }) => {\n  const windowViewportRect = usePublisher('windowViewportRect')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const viewportRef = useWindowViewportRectRef(windowViewportRect, customScrollParent)\n\n  return (\n    <div ref={viewportRef} style={viewportStyle} data-viewport-type=\"window\">\n      {children}\n    </div>\n  )\n}\n\nconst TopItemListContainer: FC<PropsWithChildren<unknown>> = ({ children }) => {\n  const TopItemList = useEmitterValue('TopItemListComponent')\n  const headerHeight = useEmitterValue('headerHeight')\n  const style = { ...topItemListStyle, marginTop: `${headerHeight}px` }\n  const context = useEmitterValue('context')\n  return createElement(TopItemList || 'div', { style, context }, children)\n}\n\nconst ListRoot: FC<ListRootProps> = React.memo(function VirtuosoRoot(props) {\n  const useWindowScroll = useEmitterValue('useWindowScroll')\n  const showTopList = useEmitterValue('topItemsIndexes').length > 0\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const TheScroller = customScrollParent || useWindowScroll ? WindowScroller : Scroller\n  const TheViewport = customScrollParent || useWindowScroll ? WindowViewport : Viewport\n  return (\n    <TheScroller {...props}>\n      <TheViewport>\n        <Header />\n        <Items />\n        <Footer />\n      </TheViewport>\n      {showTopList && (\n        <TopItemListContainer>\n          <Items showTopList={true} />\n        </TopItemListContainer>\n      )}\n    </TheScroller>\n  )\n})\n\nexport type ListHandle = RefHandle<typeof List>\n\nexport const {\n  Component: List,\n  usePublisher,\n  useEmitterValue,\n  useEmitter,\n} = systemToComponent(\n  combinedSystem,\n  {\n    required: {},\n    optional: {\n      context: 'context',\n      followOutput: 'followOutput',\n      firstItemIndex: 'firstItemIndex',\n      itemContent: 'itemContent',\n      groupContent: 'groupContent',\n      overscan: 'overscan',\n      increaseViewportBy: 'increaseViewportBy',\n      totalCount: 'totalCount',\n      topItemCount: 'topItemCount',\n      initialTopMostItemIndex: 'initialTopMostItemIndex',\n      components: 'components',\n      groupCounts: 'groupCounts',\n      atBottomThreshold: 'atBottomThreshold',\n      atTopThreshold: 'atTopThreshold',\n      computeItemKey: 'computeItemKey',\n      defaultItemHeight: 'defaultItemHeight',\n      fixedItemHeight: 'fixedItemHeight',\n      itemSize: 'itemSize',\n      scrollSeekConfiguration: 'scrollSeekConfiguration',\n      headerFooterTag: 'headerFooterTag',\n      data: 'data',\n      initialItemCount: 'initialItemCount',\n      initialScrollTop: 'initialScrollTop',\n      alignToBottom: 'alignToBottom',\n      useWindowScroll: 'useWindowScroll',\n      customScrollParent: 'customScrollParent',\n      scrollerRef: 'scrollerRef',\n      logLevel: 'logLevel',\n      react18ConcurrentRendering: 'react18ConcurrentRendering',\n\n      // deprecated\n      item: 'item',\n      group: 'group',\n      topItems: 'topItems',\n      itemHeight: 'itemHeight',\n      scrollingStateChange: 'scrollingStateChange',\n      maxHeightCacheSize: 'maxHeightCacheSize',\n      footer: 'footer',\n      header: 'header',\n      ItemContainer: 'ItemContainer',\n      ScrollContainer: 'ScrollContainer',\n      ListContainer: 'ListContainer',\n      GroupContainer: 'GroupContainer',\n      emptyComponent: 'emptyComponent',\n      HeaderContainer: 'HeaderContainer',\n      FooterContainer: 'FooterContainer',\n      scrollSeek: 'scrollSeek',\n    },\n    methods: {\n      scrollToIndex: 'scrollToIndex',\n      scrollIntoView: 'scrollIntoView',\n      scrollTo: 'scrollTo',\n      scrollBy: 'scrollBy',\n      adjustForPrependedItems: 'adjustForPrependedItems',\n    },\n    events: {\n      isScrolling: 'isScrolling',\n      endReached: 'endReached',\n      startReached: 'startReached',\n      rangeChanged: 'rangeChanged',\n      atBottomStateChange: 'atBottomStateChange',\n      atTopStateChange: 'atTopStateChange',\n      totalListHeightChanged: 'totalListHeightChanged',\n      itemsRendered: 'itemsRendered',\n      groupIndices: 'groupIndices',\n    },\n  },\n  ListRoot\n)\n\nconst Scroller = buildScroller({ usePublisher, useEmitterValue, useEmitter })\nconst WindowScroller = buildWindowScroller({ usePublisher, useEmitterValue, useEmitter })\n","import * as u from '@virtuoso.dev/urx'\nimport { rangeComparator, tupleComparator } from './comparators'\nimport { domIOSystem } from './domIOSystem'\nimport { FlatIndexLocationWithAlign } from './interfaces'\nimport { propsReadySystem } from './propsReadySystem'\nimport { scrollSeekSystem } from './scrollSeekSystem'\nimport { IndexLocation, normalizeIndexLocation } from './scrollToIndexSystem'\nimport { sizeRangeSystem } from './sizeRangeSystem'\nimport { stateFlagsSystem } from './stateFlagsSystem'\nimport { windowScrollerSystem } from './windowScrollerSystem'\n\nexport interface ElementDimensions {\n  width: number\n  height: number\n}\n\nexport interface GridItem {\n  index: number\n}\n\nexport interface GridLayout {\n  top: number\n  bottom: number\n}\n\nexport interface GridState extends GridLayout {\n  items: GridItem[]\n  offsetTop: number\n  offsetBottom: number\n  itemHeight: number\n  itemWidth: number\n}\n\nconst INITIAL_GRID_STATE: GridState = {\n  items: [],\n  offsetBottom: 0,\n  offsetTop: 0,\n  top: 0,\n  bottom: 0,\n  itemHeight: 0,\n  itemWidth: 0,\n}\n\nconst PROBE_GRID_STATE: GridState = {\n  items: [{ index: 0 }],\n  offsetBottom: 0,\n  offsetTop: 0,\n  top: 0,\n  bottom: 0,\n  itemHeight: 0,\n  itemWidth: 0,\n}\n\nconst { round, ceil, floor, min, max } = Math\n\nfunction buildItems(startIndex: number, endIndex: number) {\n  return Array.from({ length: endIndex - startIndex + 1 }).map((_, i) => ({ index: i + startIndex } as GridItem))\n}\nexport const gridSystem = u.system(\n  ([\n    { overscan, visibleRange, listBoundary },\n    { scrollTop, viewportHeight, scrollBy, scrollTo, smoothScrollTargetReached, scrollContainerState },\n    stateFlags,\n    scrollSeek,\n    { propsReady, didMount },\n    { windowViewportRect, windowScrollTo, useWindowScroll, customScrollParent, windowScrollContainerState },\n  ]) => {\n    const totalCount = u.statefulStream(0)\n    const initialItemCount = u.statefulStream(0)\n    const gridState = u.statefulStream(INITIAL_GRID_STATE)\n    const viewportDimensions = u.statefulStream<ElementDimensions>({ height: 0, width: 0 })\n    const itemDimensions = u.statefulStream<ElementDimensions>({ height: 0, width: 0 })\n    const scrollToIndex = u.stream<IndexLocation>()\n    const scrollHeight = u.stream<number>()\n    const deviation = u.statefulStream(0)\n\n    u.connect(\n      u.pipe(\n        didMount,\n        u.withLatestFrom(initialItemCount),\n        u.filter(([, count]) => count !== 0),\n        u.map(([, count]) => {\n          return {\n            items: buildItems(0, count - 1),\n            top: 0,\n            bottom: 0,\n            offsetBottom: 0,\n            offsetTop: 0,\n            itemHeight: 0,\n            itemWidth: 0,\n          }\n        })\n      ),\n      gridState\n    )\n\n    u.connect(\n      u.pipe(\n        u.combineLatest(\n          u.duc(totalCount),\n          visibleRange,\n          u.duc(itemDimensions, (prev, next) => prev && prev.width === next.width && prev.height === next.height)\n        ),\n        u.withLatestFrom(viewportDimensions),\n        u.map(([[totalCount, [startOffset, endOffset], item], viewport]) => {\n          const { height: itemHeight, width: itemWidth } = item\n          const { width: viewportWidth } = viewport\n\n          if (totalCount === 0 || viewportWidth === 0) {\n            return INITIAL_GRID_STATE\n          }\n\n          if (itemWidth === 0) {\n            return PROBE_GRID_STATE\n          }\n\n          const perRow = itemsPerRow(viewportWidth, itemWidth)\n\n          let startIndex = perRow * floor(startOffset / itemHeight)\n          let endIndex = perRow * ceil(endOffset / itemHeight) - 1\n          endIndex = max(0, min(totalCount - 1, endIndex))\n          startIndex = min(endIndex, max(0, startIndex))\n\n          const items = buildItems(startIndex, endIndex)\n          const { top, bottom } = gridLayout(viewport, item, items)\n          const totalHeight = ceil(totalCount / perRow) * itemHeight\n          const offsetBottom = totalHeight - bottom\n\n          return { items, offsetTop: top, offsetBottom, top, bottom, itemHeight, itemWidth } as GridState\n        })\n      ),\n      gridState\n    )\n\n    u.connect(\n      u.pipe(\n        viewportDimensions,\n        u.map(({ height }) => height)\n      ),\n      viewportHeight\n    )\n\n    u.connect(\n      u.pipe(\n        u.combineLatest(viewportDimensions, itemDimensions, gridState),\n        u.map(([viewportDimensions, item, { items }]) => {\n          const { top, bottom } = gridLayout(viewportDimensions, item, items)\n\n          return [top, bottom] as [number, number]\n        }),\n        u.distinctUntilChanged(tupleComparator)\n      ),\n      listBoundary\n    )\n\n    const endReached = u.streamFromEmitter(\n      u.pipe(\n        u.duc(gridState),\n        u.filter(({ items }) => items.length > 0),\n        u.withLatestFrom(totalCount),\n        u.filter(([{ items }, totalCount]) => items[items.length - 1].index === totalCount - 1),\n        u.map(([, totalCount]) => totalCount - 1),\n        u.distinctUntilChanged()\n      )\n    )\n\n    const startReached = u.streamFromEmitter(\n      u.pipe(\n        u.duc(gridState),\n        u.filter(({ items }) => {\n          return items.length > 0 && items[0].index === 0\n        }),\n        u.mapTo(0),\n        u.distinctUntilChanged()\n      )\n    )\n\n    const rangeChanged = u.streamFromEmitter(\n      u.pipe(\n        u.duc(gridState),\n        u.filter(({ items }) => items.length > 0),\n        u.map(({ items }) => {\n          return {\n            startIndex: items[0].index,\n            endIndex: items[items.length - 1].index,\n          }\n        }),\n        u.distinctUntilChanged(rangeComparator)\n      )\n    )\n\n    u.connect(rangeChanged, scrollSeek.scrollSeekRangeChanged)\n\n    u.connect(\n      u.pipe(\n        scrollToIndex,\n        u.withLatestFrom(viewportDimensions, itemDimensions, totalCount),\n        u.map(([location, viewport, item, totalCount]) => {\n          const normalLocation = normalizeIndexLocation(location) as FlatIndexLocationWithAlign\n          const { align, behavior, offset } = normalLocation\n          let index = normalLocation.index\n          if (index === 'LAST') {\n            index = totalCount - 1\n          }\n\n          index = max(0, index, min(totalCount - 1, index))\n\n          let top = itemTop(viewport, item, index)\n\n          if (align === 'end') {\n            top = round(top - viewport.height + item.height)\n          } else if (align === 'center') {\n            top = round(top - viewport.height / 2 + item.height / 2)\n          }\n\n          if (offset) {\n            top += offset\n          }\n\n          return { top, behavior }\n        })\n      ),\n      scrollTo\n    )\n\n    const totalListHeight = u.statefulStreamFromEmitter(\n      u.pipe(\n        gridState,\n        u.map((gridState) => {\n          return gridState.offsetBottom + gridState.bottom\n        })\n      ),\n      0\n    )\n\n    u.connect(\n      u.pipe(\n        windowViewportRect,\n        u.map((viewportInfo) => ({ width: viewportInfo.visibleWidth, height: viewportInfo.visibleHeight }))\n      ),\n      viewportDimensions\n    )\n\n    return {\n      // input\n      totalCount,\n      viewportDimensions,\n      itemDimensions,\n      scrollTop,\n      scrollHeight,\n      overscan,\n      scrollBy,\n      scrollTo,\n      scrollToIndex,\n      smoothScrollTargetReached,\n      windowViewportRect,\n      windowScrollTo,\n      useWindowScroll,\n      customScrollParent,\n      windowScrollContainerState,\n      deviation,\n      scrollContainerState,\n      initialItemCount,\n      ...scrollSeek,\n\n      // output\n      gridState,\n      totalListHeight,\n      ...stateFlags,\n      startReached,\n      endReached,\n      rangeChanged,\n      propsReady,\n    }\n  },\n  u.tup(sizeRangeSystem, domIOSystem, stateFlagsSystem, scrollSeekSystem, propsReadySystem, windowScrollerSystem)\n)\n\nfunction gridLayout(viewport: ElementDimensions, item: ElementDimensions, items: GridItem[]): GridLayout {\n  const { height: itemHeight } = item\n  if (itemHeight === undefined || items.length === 0) {\n    return { top: 0, bottom: 0 }\n  }\n\n  const top = itemTop(viewport, item, items[0].index)\n  const bottom = itemTop(viewport, item, items[items.length - 1].index) + itemHeight\n  return { top, bottom }\n}\n\nfunction itemTop(viewport: ElementDimensions, item: ElementDimensions, index: number) {\n  const perRow = itemsPerRow(viewport.width, item.width)\n  return floor(index / perRow) * item.height\n}\n\nfunction itemsPerRow(viewportWidth: number, itemWidth: number) {\n  return max(1, floor(viewportWidth / itemWidth))\n}\n","import { RefHandle, systemToComponent } from '@virtuoso.dev/react-urx'\n\nimport * as u from '@virtuoso.dev/urx'\nimport * as React from 'react'\nimport { createElement, FC, PropsWithChildren } from 'react'\nimport { gridSystem } from './gridSystem'\nimport useSize from './hooks/useSize'\nimport useWindowViewportRectRef from './hooks/useWindowViewportRect'\nimport { GridComponents, GridComputeItemKey, GridItemContent, GridRootProps } from './interfaces'\nimport { addDeprecatedAlias, buildScroller, buildWindowScroller, contextPropIfNotDomElement, identity, viewportStyle } from './List'\n\nconst gridComponentPropsSystem = u.system(() => {\n  const itemContent = u.statefulStream<GridItemContent<any>>((index) => `Item ${index}`)\n  const components = u.statefulStream<GridComponents>({})\n  const context = u.statefulStream<unknown>(null)\n  const itemClassName = u.statefulStream('virtuoso-grid-item')\n  const listClassName = u.statefulStream('virtuoso-grid-list')\n  const computeItemKey = u.statefulStream<GridComputeItemKey>(identity)\n  const scrollerRef = u.statefulStream<(ref: HTMLElement | null) => void>(u.noop)\n\n  const distinctProp = <K extends keyof GridComponents>(propName: K, defaultValue: GridComponents[K] | null | 'div' = null) => {\n    return u.statefulStreamFromEmitter(\n      u.pipe(\n        components,\n        u.map((components) => components[propName]),\n        u.distinctUntilChanged()\n      ),\n      defaultValue\n    )\n  }\n\n  return {\n    context,\n    itemContent,\n    components,\n    computeItemKey,\n    itemClassName,\n    listClassName,\n    scrollerRef,\n    ListComponent: distinctProp('List', 'div'),\n    ItemComponent: distinctProp('Item', 'div'),\n    ScrollerComponent: distinctProp('Scroller', 'div'),\n    ScrollSeekPlaceholder: distinctProp('ScrollSeekPlaceholder', 'div'),\n  }\n})\n\nconst combinedSystem = u.system(([gridSystem, gridComponentPropsSystem]) => {\n  const deprecatedProps = {\n    item: addDeprecatedAlias(gridComponentPropsSystem.itemContent, 'Rename the %citem%c prop to %citemContent.'),\n    ItemContainer: u.stream<any>(),\n    ScrollContainer: u.stream<any>(),\n    ListContainer: u.stream<any>(),\n    emptyComponent: u.stream<any>(),\n    scrollSeek: u.stream<any>(),\n  }\n\n  function deprecateComponentProp(stream: u.Stream<any>, componentName: string, propName: string) {\n    u.connect(\n      u.pipe(\n        stream,\n        u.withLatestFrom(gridComponentPropsSystem.components),\n        u.map(([comp, components]) => {\n          console.warn(`react-virtuoso: ${propName} property is deprecated. Pass components.${componentName} instead.`)\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n          return { ...components, [componentName]: comp }\n        })\n      ),\n      gridComponentPropsSystem.components\n    )\n  }\n\n  u.subscribe(deprecatedProps.scrollSeek, ({ placeholder, ...config }) => {\n    console.warn(\n      `react-virtuoso: scrollSeek property is deprecated. Pass scrollSeekConfiguration and specify the placeholder in components.ScrollSeekPlaceholder instead.`\n    )\n    u.publish(gridComponentPropsSystem.components, {\n      ...u.getValue(gridComponentPropsSystem.components),\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      ScrollSeekPlaceholder: placeholder,\n    })\n    u.publish(gridSystem.scrollSeekConfiguration, config)\n  })\n\n  deprecateComponentProp(deprecatedProps.ItemContainer, 'Item', 'ItemContainer')\n  deprecateComponentProp(deprecatedProps.ListContainer, 'List', 'ListContainer')\n  deprecateComponentProp(deprecatedProps.ScrollContainer, 'Scroller', 'ScrollContainer')\n\n  return { ...gridSystem, ...gridComponentPropsSystem, ...deprecatedProps }\n}, u.tup(gridSystem, gridComponentPropsSystem))\n\nconst GridItems: FC = React.memo(function GridItems() {\n  const gridState = useEmitterValue('gridState')\n  const listClassName = useEmitterValue('listClassName')\n  const itemClassName = useEmitterValue('itemClassName')\n  const itemContent = useEmitterValue('itemContent')\n  const computeItemKey = useEmitterValue('computeItemKey')\n  const isSeeking = useEmitterValue('isSeeking')\n  const scrollHeightCallback = usePublisher('scrollHeight')\n  const ItemComponent = useEmitterValue('ItemComponent')!\n  const ListComponent = useEmitterValue('ListComponent')!\n  const ScrollSeekPlaceholder = useEmitterValue('ScrollSeekPlaceholder')!\n  const context = useEmitterValue('context')\n  const itemDimensions = usePublisher('itemDimensions')\n\n  const listRef = useSize((el) => {\n    const scrollHeight = el.parentElement!.parentElement!.scrollHeight\n    scrollHeightCallback(scrollHeight)\n    const firstItem = el.firstChild as HTMLElement\n    if (firstItem) {\n      itemDimensions(firstItem.getBoundingClientRect())\n    }\n  })\n\n  return createElement(\n    ListComponent,\n    {\n      ref: listRef,\n      className: listClassName,\n      ...contextPropIfNotDomElement(ListComponent, context),\n      style: { paddingTop: gridState.offsetTop, paddingBottom: gridState.offsetBottom },\n    },\n    gridState.items.map((item) => {\n      const key = computeItemKey(item.index)\n      return isSeeking\n        ? createElement(ScrollSeekPlaceholder, {\n            key,\n            ...contextPropIfNotDomElement(ScrollSeekPlaceholder, context),\n            index: item.index,\n            height: gridState.itemHeight,\n            width: gridState.itemWidth,\n          })\n        : createElement(\n            ItemComponent,\n            { ...contextPropIfNotDomElement(ItemComponent, context), className: itemClassName, 'data-index': item.index, key },\n            itemContent(item.index, context)\n          )\n    })\n  )\n})\n\nconst Viewport: FC<PropsWithChildren<unknown>> = ({ children }) => {\n  const viewportDimensions = usePublisher('viewportDimensions')\n\n  const viewportRef = useSize((el) => {\n    viewportDimensions(el.getBoundingClientRect())\n  })\n\n  return (\n    <div style={viewportStyle} ref={viewportRef}>\n      {children}\n    </div>\n  )\n}\n\nconst WindowViewport: FC<PropsWithChildren<unknown>> = ({ children }) => {\n  const windowViewportRect = usePublisher('windowViewportRect')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const viewportRef = useWindowViewportRectRef(windowViewportRect, customScrollParent)\n\n  return (\n    <div ref={viewportRef} style={viewportStyle}>\n      {children}\n    </div>\n  )\n}\n\nconst GridRoot: FC<GridRootProps> = React.memo(function GridRoot({ ...props }) {\n  const useWindowScroll = useEmitterValue('useWindowScroll')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const TheScroller = customScrollParent || useWindowScroll ? WindowScroller : Scroller\n  const TheViewport = customScrollParent || useWindowScroll ? WindowViewport : Viewport\n\n  return (\n    <TheScroller {...props}>\n      <TheViewport>\n        <GridItems />\n      </TheViewport>\n    </TheScroller>\n  )\n})\n\nconst {\n  Component: Grid,\n  usePublisher,\n  useEmitterValue,\n  useEmitter,\n} = systemToComponent(\n  combinedSystem,\n  {\n    optional: {\n      totalCount: 'totalCount',\n      overscan: 'overscan',\n      itemContent: 'itemContent',\n      components: 'components',\n      computeItemKey: 'computeItemKey',\n      initialItemCount: 'initialItemCount',\n      scrollSeekConfiguration: 'scrollSeekConfiguration',\n      listClassName: 'listClassName',\n      itemClassName: 'itemClassName',\n      useWindowScroll: 'useWindowScroll',\n      customScrollParent: 'customScrollParent',\n      scrollerRef: 'scrollerRef',\n\n      // deprecated\n      item: 'item',\n      ItemContainer: 'ItemContainer',\n      ScrollContainer: 'ScrollContainer',\n      ListContainer: 'ListContainer',\n      scrollSeek: 'scrollSeek',\n    },\n    methods: {\n      scrollTo: 'scrollTo',\n      scrollBy: 'scrollBy',\n      scrollToIndex: 'scrollToIndex',\n    },\n    events: {\n      isScrolling: 'isScrolling',\n      endReached: 'endReached',\n      startReached: 'startReached',\n      rangeChanged: 'rangeChanged',\n      atBottomStateChange: 'atBottomStateChange',\n      atTopStateChange: 'atTopStateChange',\n    },\n  },\n  GridRoot\n)\n\nexport type foo<T> = T extends React.ForwardRefExoticComponent<React.RefAttributes<infer Handle>> ? Handle : never\n\nexport type GridHandle = RefHandle<typeof Grid>\nexport { Grid }\n\nconst Scroller = buildScroller({ usePublisher, useEmitterValue, useEmitter })\nconst WindowScroller = buildWindowScroller({ usePublisher, useEmitterValue, useEmitter })\n","import { systemToComponent } from '@virtuoso.dev/react-urx'\nimport { map, pipe, statefulStream, system, tup, statefulStreamFromEmitter, distinctUntilChanged, noop, compose } from '@virtuoso.dev/urx'\nimport * as React from 'react'\nimport { createElement, FC, PropsWithChildren } from 'react'\nimport useChangedListContentsSizes from './hooks/useChangedChildSizes'\nimport { ComputeItemKey, ItemContent, FixedHeaderContent, TableComponents, TableRootProps } from './interfaces'\nimport { listSystem } from './listSystem'\nimport { identity, buildScroller, buildWindowScroller, viewportStyle, contextPropIfNotDomElement } from './List'\nimport useSize from './hooks/useSize'\nimport { correctItemSize } from './utils/correctItemSize'\nimport useWindowViewportRectRef from './hooks/useWindowViewportRect'\n\nconst tableComponentPropsSystem = system(() => {\n  const itemContent = statefulStream<ItemContent<any, unknown>>((index: number) => <td>Item ${index}</td>)\n  const context = statefulStream<unknown>(null)\n  const fixedHeaderContent = statefulStream<FixedHeaderContent>(null)\n  const components = statefulStream<TableComponents>({})\n  const computeItemKey = statefulStream<ComputeItemKey<any, unknown>>(identity)\n  const scrollerRef = statefulStream<(ref: HTMLElement | Window | null) => void>(noop)\n\n  const distinctProp = <K extends keyof TableComponents>(\n    propName: K,\n    defaultValue: TableComponents[K] | null | 'thead' | 'table' | 'tbody' | 'tr' | 'div' = null\n  ) => {\n    return statefulStreamFromEmitter(\n      pipe(\n        components,\n        map((components) => components[propName]),\n        distinctUntilChanged()\n      ),\n      defaultValue\n    )\n  }\n\n  return {\n    context,\n    itemContent,\n    fixedHeaderContent,\n    components,\n    computeItemKey,\n    scrollerRef,\n    TableComponent: distinctProp('Table', 'table'),\n    TableHeadComponent: distinctProp('TableHead', 'thead'),\n    TableBodyComponent: distinctProp('TableBody', 'tbody'),\n    TableRowComponent: distinctProp('TableRow', 'tr'),\n    ScrollerComponent: distinctProp('Scroller', 'div'),\n    EmptyPlaceholder: distinctProp('EmptyPlaceholder'),\n    ScrollSeekPlaceholder: distinctProp('ScrollSeekPlaceholder'),\n    FillerRow: distinctProp('FillerRow'),\n  }\n})\n\nconst combinedSystem = system(([listSystem, propsSystem]) => {\n  return { ...listSystem, ...propsSystem }\n}, tup(listSystem, tableComponentPropsSystem))\n\nconst DefaultScrollSeekPlaceholder = ({ height }: { height: number }) => (\n  <tr>\n    <td style={{ height }}></td>\n  </tr>\n)\n\nconst DefaultFillerRow = ({ height }: { height: number }) => (\n  <tr>\n    <td style={{ height: height, padding: 0, border: 0 }}></td>\n  </tr>\n)\n\nexport const Items = React.memo(function VirtuosoItems() {\n  const listState = useEmitterValue('listState')\n  const sizeRanges = usePublisher('sizeRanges')\n  const useWindowScroll = useEmitterValue('useWindowScroll')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const windowScrollContainerStateCallback = usePublisher('windowScrollContainerState')\n  const _scrollContainerStateCallback = usePublisher('scrollContainerState')\n  const scrollContainerStateCallback =\n    customScrollParent || useWindowScroll ? windowScrollContainerStateCallback : _scrollContainerStateCallback\n  const itemContent = useEmitterValue('itemContent')\n  const trackItemSizes = useEmitterValue('trackItemSizes')\n  const itemSize = useEmitterValue('itemSize')\n  const log = useEmitterValue('log')\n\n  const { callbackRef, ref } = useChangedListContentsSizes(\n    sizeRanges,\n    itemSize,\n    trackItemSizes,\n    scrollContainerStateCallback,\n    log,\n    customScrollParent\n  )\n\n  const [deviation, setDeviation] = React.useState(0)\n  useEmitter('deviation', (value) => {\n    if (deviation !== value) {\n      ref.current!.style.marginTop = `${value}px`\n      setDeviation(value)\n    }\n  })\n  const EmptyPlaceholder = useEmitterValue('EmptyPlaceholder')\n  const ScrollSeekPlaceholder = useEmitterValue('ScrollSeekPlaceholder') || DefaultScrollSeekPlaceholder\n  const FillerRow = useEmitterValue('FillerRow') || DefaultFillerRow\n  const TableBodyComponent = useEmitterValue('TableBodyComponent')!\n  const TableRowComponent = useEmitterValue('TableRowComponent')!\n  const computeItemKey = useEmitterValue('computeItemKey')\n  const isSeeking = useEmitterValue('isSeeking')\n  const paddingTopAddition = useEmitterValue('paddingTopAddition')\n  const firstItemIndex = useEmitterValue('firstItemIndex')\n  const statefulTotalCount = useEmitterValue('statefulTotalCount')\n  const context = useEmitterValue('context')\n\n  if (statefulTotalCount === 0 && EmptyPlaceholder) {\n    return createElement(EmptyPlaceholder, contextPropIfNotDomElement(EmptyPlaceholder, context))\n  }\n\n  const paddingTop = listState.offsetTop + paddingTopAddition + deviation\n  const paddingBottom = listState.offsetBottom\n\n  const paddingTopEl = paddingTop > 0 ? <FillerRow height={paddingTop} key=\"padding-top\" /> : null\n\n  const paddingBottomEl = paddingBottom > 0 ? <FillerRow height={paddingBottom} key=\"padding-bottom\" /> : null\n\n  const items = listState.items.map((item) => {\n    const index = item.originalIndex!\n    const key = computeItemKey(index + firstItemIndex, item.data, context)\n\n    if (isSeeking) {\n      return createElement(ScrollSeekPlaceholder, {\n        ...contextPropIfNotDomElement(ScrollSeekPlaceholder, context),\n        key,\n        index: item.index,\n        height: item.size,\n        type: item.type || 'item',\n      })\n    }\n    return createElement(\n      TableRowComponent,\n      {\n        ...contextPropIfNotDomElement(TableRowComponent, context),\n        key,\n        'data-index': index,\n        'data-known-size': item.size,\n        'data-item-index': item.index,\n        style: { overflowAnchor: 'none' },\n      } as any,\n      itemContent(item.index, item.data, context)\n    )\n  })\n\n  return createElement(\n    TableBodyComponent,\n    { ref: callbackRef, 'data-test-id': 'virtuoso-item-list', ...contextPropIfNotDomElement(TableBodyComponent, context) },\n    [paddingTopEl, ...items, paddingBottomEl]\n  )\n})\n\nexport interface Hooks {\n  usePublisher: typeof usePublisher\n  useEmitterValue: typeof useEmitterValue\n  useEmitter: typeof useEmitter\n}\n\nconst Viewport: FC<PropsWithChildren<unknown>> = ({ children }) => {\n  const viewportHeight = usePublisher('viewportHeight')\n  const viewportRef = useSize(compose(viewportHeight, (el) => correctItemSize(el, 'height')))\n\n  return (\n    <div style={viewportStyle} ref={viewportRef} data-viewport-type=\"element\">\n      {children}\n    </div>\n  )\n}\n\nconst WindowViewport: FC<PropsWithChildren<unknown>> = ({ children }) => {\n  const windowViewportRect = usePublisher('windowViewportRect')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const viewportRef = useWindowViewportRectRef(windowViewportRect, customScrollParent)\n\n  return (\n    <div ref={viewportRef} style={viewportStyle} data-viewport-type=\"window\">\n      {children}\n    </div>\n  )\n}\n\nconst TableRoot: FC<TableRootProps> = React.memo(function TableVirtuosoRoot(props) {\n  const useWindowScroll = useEmitterValue('useWindowScroll')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const fixedHeaderHeight = usePublisher('fixedHeaderHeight')\n  const fixedHeaderContent = useEmitterValue('fixedHeaderContent')\n  const context = useEmitterValue('context')\n  const theadRef = useSize(compose(fixedHeaderHeight, (el) => correctItemSize(el, 'height')))\n  const TheScroller = customScrollParent || useWindowScroll ? WindowScroller : Scroller\n  const TheViewport = customScrollParent || useWindowScroll ? WindowViewport : Viewport\n  const TheTable = useEmitterValue('TableComponent')\n  const TheTHead = useEmitterValue('TableHeadComponent')\n\n  const theHead = fixedHeaderContent\n    ? React.createElement(\n        TheTHead!,\n        {\n          key: 'TableHead',\n          style: { zIndex: 1, position: 'sticky', top: 0 },\n          ref: theadRef,\n          ...contextPropIfNotDomElement(TheTHead, context),\n        } as any,\n        fixedHeaderContent()\n      )\n    : null\n\n  return (\n    <TheScroller {...props}>\n      <TheViewport>\n        {React.createElement(TheTable!, { style: { borderSpacing: 0 }, ...contextPropIfNotDomElement(TheTable, context) } as any, [\n          theHead,\n          <Items key=\"TableBody\" />,\n        ])}\n      </TheViewport>\n    </TheScroller>\n  )\n})\n\nexport const {\n  Component: Table,\n  usePublisher,\n  useEmitterValue,\n  useEmitter,\n} = systemToComponent(\n  combinedSystem,\n  {\n    required: {},\n    optional: {\n      context: 'context',\n      followOutput: 'followOutput',\n      firstItemIndex: 'firstItemIndex',\n      itemContent: 'itemContent',\n      fixedHeaderContent: 'fixedHeaderContent',\n      overscan: 'overscan',\n      increaseViewportBy: 'increaseViewportBy',\n      totalCount: 'totalCount',\n      topItemCount: 'topItemCount',\n      initialTopMostItemIndex: 'initialTopMostItemIndex',\n      components: 'components',\n      groupCounts: 'groupCounts',\n      atBottomThreshold: 'atBottomThreshold',\n      atTopThreshold: 'atTopThreshold',\n      computeItemKey: 'computeItemKey',\n      defaultItemHeight: 'defaultItemHeight',\n      fixedItemHeight: 'fixedItemHeight',\n      itemSize: 'itemSize',\n      scrollSeekConfiguration: 'scrollSeekConfiguration',\n      data: 'data',\n      initialItemCount: 'initialItemCount',\n      initialScrollTop: 'initialScrollTop',\n      alignToBottom: 'alignToBottom',\n      useWindowScroll: 'useWindowScroll',\n      customScrollParent: 'customScrollParent',\n      scrollerRef: 'scrollerRef',\n      logLevel: 'logLevel',\n      react18ConcurrentRendering: 'react18ConcurrentRendering',\n    },\n    methods: {\n      scrollToIndex: 'scrollToIndex',\n      scrollIntoView: 'scrollIntoView',\n      scrollTo: 'scrollTo',\n      scrollBy: 'scrollBy',\n    },\n    events: {\n      isScrolling: 'isScrolling',\n      endReached: 'endReached',\n      startReached: 'startReached',\n      rangeChanged: 'rangeChanged',\n      atBottomStateChange: 'atBottomStateChange',\n      atTopStateChange: 'atTopStateChange',\n      totalListHeightChanged: 'totalListHeightChanged',\n      itemsRendered: 'itemsRendered',\n      groupIndices: 'groupIndices',\n    },\n  },\n  TableRoot\n)\n\nconst Scroller = buildScroller({ usePublisher, useEmitterValue, useEmitter })\nconst WindowScroller = buildWindowScroller({ usePublisher, useEmitterValue, useEmitter })\n","import { ReactElement, Ref } from 'react'\n\nimport {\n  Components,\n  ComputeItemKey,\n  FollowOutput,\n  GridComponents,\n  GridComputeItemKey,\n  GridItemContent,\n  GroupContent,\n  GroupItemContent,\n  IndexLocationWithAlign,\n  ItemContent,\n  ListItem,\n  ListRange,\n  ScrollSeekConfiguration,\n  TableComponents,\n  FixedHeaderContent,\n  ScrollIntoViewLocation,\n  ListRootProps,\n  GridRootProps,\n  FlatIndexLocationWithAlign,\n  FlatScrollIntoViewLocation,\n} from './interfaces'\nimport { List } from './List'\nimport { Grid } from './Grid'\nimport { Table } from './Table'\n\nexport interface VirtuosoProps<D, C> extends ListRootProps {\n  /**\n   * The total amount of items to be rendered.\n   */\n  totalCount?: number\n\n  /**\n   * The data items to be rendered. If data is set, the total count will be inferred from the length of the array.\n   */\n  data?: readonly D[]\n\n  /**\n   * Additional context available in the custom components and content callbacks\n   */\n  context?: C\n\n  /**\n   * *The property accepts pixel values.*\n   *\n   * Set the overscan property to make the component \"chunk\" the rendering of new items on scroll.\n   * The property causes the component to render more items than the necessary, but reduces the re-renders on scroll.\n   * Setting `{ main: number, reverse: number }` lets you extend the list in both the main and the reverse scrollable directions.\n   * See the `increaseViewportBy` property for a similar behavior (equivalent to the `overscan` in react-window).\n   *\n   */\n  overscan?: number | { main: number; reverse: number }\n\n  /**\n   *\n   * *The property accepts pixel values.*\n   *\n   * Set the increaseViewportBy property to artificially increase the viewport size, causing items to be rendered before outside of the viewport.\n   * The property causes the component to render more items than the necessary, but can help with slow loading content.\n   * Using `{ top?: number, bottom?: number }` lets you set the increase for each end separately.\n   *\n   */\n  increaseViewportBy?: number | { top: number; bottom: number }\n\n  /**\n   * Set the amount of items to remain fixed at the top of the list.\n   *\n   * For a header that scrolls away when scrolling, check the `components.Header` property.\n   */\n  topItemCount?: number\n\n  /**\n   * Set to a value between 0 and totalCount - 1 to make the list start scrolled to that item.\n   * Pass in an object to achieve additional effects similar to `scrollToIndex`.\n   */\n  initialTopMostItemIndex?: number | IndexLocationWithAlign\n\n  /**\n   * Set this value to offset the initial location of the list.\n   * Warning: using this property will still run a render cycle at the scrollTop: 0 list window.\n   * If possible, avoid using it and stick to `initialTopMostItemIndex` instead.\n   */\n  initialScrollTop?: number\n\n  /**\n   * Use for server-side rendering - if set, the list will render the specified amount of items\n   * regardless of the container / item size.\n   */\n  initialItemCount?: number\n\n  /**\n   * Use the `components` property for advanced customization of the elements rendered by the list.\n   */\n  components?: Components<C>\n\n  /**\n   * Set the callback to specify the contents of the item.\n   */\n  itemContent?: ItemContent<D, C>\n\n  /**\n   * If specified, the component will use the function to generate the `key` property for each list item.\n   */\n  computeItemKey?: ComputeItemKey<D, C>\n\n  /**\n   * By default, the component assumes the default item height from the first rendered item (rendering it as a \"probe\").\n   *\n   * If the first item turns out to be an outlier (very short or tall), the rest of the rendering will be slower,\n   * as multiple passes of rendering should happen for the list to fill the viewport.\n   *\n   * Setting `defaultItemHeight` causes the component to skip the \"probe\" rendering and use the property\n   * value as default height instead.\n   */\n  defaultItemHeight?: number\n\n  /**\n   * Allows customizing the height/width calculation of `Item` elements.\n   *\n   * The default implementation reads `el.getBoundingClientRect().height` and `el.getBoundingClientRect().width`.\n   */\n  itemSize?: (el: HTMLElement, field: 'offsetHeight' | 'offsetWidth') => number\n\n  /**\n   * Can be used to improve performance if the rendered items are of known size.\n   * Setting it causes the component to skip item measurements.\n   */\n  fixedItemHeight?: number\n\n  /**\n   * Use to display placeholders if the user scrolls fast through the list.\n   *\n   * Set `components.ScrollSeekPlaceholder` to change the placeholder content.\n   */\n  scrollSeekConfiguration?: ScrollSeekConfiguration | false\n\n  /**\n   * If set to `true`, the list automatically scrolls to bottom if the total count is changed.\n   * Set to `\"smooth\"` for an animated scrolling.\n   *\n   * By default, `followOutput` scrolls down only if the list is already at the bottom.\n   * To implement an arbitrary logic behind that, pass a function:\n   *\n   * ```tsx\n   * <Virtuoso\n   *  followOutput={(isAtBottom: boolean) => {\n   *    if (expression) {\n   *      return 'smooth' // can be 'auto' or false to avoid scrolling\n   *    } else {\n   *      return false\n   *    }\n   *  }} />\n   * ```\n   */\n  followOutput?: FollowOutput\n\n  /**\n   * Set to customize the wrapper tag for the header and footer components (default is `div`).\n   */\n  headerFooterTag?: string\n\n  /**\n   * Use when implementing inverse infinite scrolling - decrease the value this property\n   * in combination with  `data` or `totalCount` to prepend items to the top of the list.\n   *\n   * Warning: the firstItemIndex should **be a positive number**, based on the total amount of items to be displayed.\n   */\n  firstItemIndex?: number\n\n  /**\n   * Called when the list starts/stops scrolling.\n   */\n  isScrolling?: (isScrolling: boolean) => void\n\n  /**\n   * Gets called when the user scrolls to the end of the list.\n   * Receives the last item index as an argument. Can be used to implement endless scrolling.\n   */\n  endReached?: (index: number) => void\n\n  /**\n   * Called when the user scrolls to the start of the list.\n   */\n  startReached?: (index: number) => void\n\n  /**\n   * Called with the new set of items each time the list items are rendered due to scrolling.\n   */\n  rangeChanged?: (range: ListRange) => void\n\n  /**\n   * Called with true / false when the list has reached the bottom / gets scrolled up.\n   * Can be used to load newer items, like `tail -f`.\n   */\n  atBottomStateChange?: (atBottom: boolean) => void\n\n  /**\n   * Called with `true` / `false` when the list has reached the top / gets scrolled down.\n   */\n  atTopStateChange?: (atTop: boolean) => void\n\n  /**\n   * Called when the total list height is changed due to new items or viewport resize.\n   */\n  totalListHeightChanged?: (height: number) => void\n\n  /**\n   * Called with the new set of items each time the list items are rendered due to scrolling.\n   */\n  itemsRendered?: (items: ListItem<D>[]) => void\n\n  /**\n   * Setting `alignToBottom` to `true` aligns the items to the bottom of the list if the list is shorter than the viewport.\n   * Use `followOutput` property to keep the list aligned when new items are appended.\n   */\n  alignToBottom?: boolean\n\n  /**\n   * Uses the document scroller rather than wrapping the list in its own.\n   */\n  useWindowScroll?: boolean\n\n  /**\n   * Pass a reference to a scrollable parent element, so that the list won't wrap in its own.\n   */\n  customScrollParent?: HTMLElement\n\n  /**\n   * Provides access to the root DOM element\n   */\n  scrollerRef?: (ref: HTMLElement | Window | null) => any\n\n  /**\n   * By default `0`. Redefine to change how much away from the top the scroller can be before the list is not considered not at top.\n   */\n  atTopThreshold?: number\n\n  /**\n   * By default `4`. Redefine to change how much away from the bottom the scroller can be before the list is not considered not at bottom.\n   */\n  atBottomThreshold?: number\n\n  /**\n   * No longer necessary after 2.10.2. component should work out of the box.\n   */\n  react18ConcurrentRendering?: boolean\n}\n\nexport interface GroupedVirtuosoProps<D, C> extends Omit<VirtuosoProps<D, C>, 'totalCount' | 'itemContent'> {\n  /**\n   * Specifies the amount of items in each group (and, actually, how many groups are there).\n   * For example, passing [20, 30] will display 2 groups with 20 and 30 items each.\n   */\n  groupCounts?: number[]\n\n  /**\n   * Specifies how each each group header gets rendered. The callback receives the zero-based index of the group.\n   */\n  groupContent?: GroupContent\n\n  /**\n   * Specifies how each each item gets rendered.\n   */\n  itemContent?: GroupItemContent<D, C>\n}\n\nexport interface TableVirtuosoProps<D, C> extends Omit<VirtuosoProps<D, C>, 'components' | 'headerFooterTag' | 'topItemCount'> {\n  /**\n   * Use the `components` property for advanced customization of the elements rendered by the table.\n   */\n  components?: TableComponents<C>\n  /**\n   * Set the contents of the table header.\n   */\n  fixedHeaderContent?: FixedHeaderContent\n\n  /**\n   * The total amount of items to be rendered.\n   */\n  totalCount?: number\n\n  /**\n   * The data items to be rendered. If data is set, the total count will be inferred from the length of the array.\n   */\n  data?: readonly D[]\n\n  /**\n   * Set the overscan property to make the component \"chunk\" the rendering of new items on scroll.\n   * The property causes the component to render more items than the necessary, but reduces the re-renders on scroll.\n   * Setting `{ main: number, reverse: number }` lets you extend the list in both the main and the reverse scrollable directions.\n   * See the `increaseViewportBy` property for a similar behavior (equivalent to the `overscan` in `react-window`).\n   */\n  overscan?: number | { main: number; reverse: number }\n\n  /**\n   * Set the increaseViewportBy property to artificially increase the viewport size, causing items to be rendered before outside of the viewport.\n   * The property causes the component to render more items than the necessary, but can help with slow loading content.\n   * Using `{ top?: number, bottom?: number }` lets you set the increase for each end separately.\n   */\n  increaseViewportBy?: number | { top: number; bottom: number }\n\n  /**\n   * Set to a value between 0 and totalCount - 1 to make the list start scrolled to that item.\n   */\n  initialTopMostItemIndex?: number\n\n  /**\n   * Set this value to offset the initial location of the list.\n   * Warning: using this property will still run a render cycle at the scrollTop: 0 list window.\n   * If possible, avoid using it and stick to `initialTopMostItemIndex` instead.\n   */\n  initialScrollTop?: number\n\n  /**\n   * Use for server-side rendering - if set, the list will render the specified amount of items\n   * regardless of the container / item size.\n   */\n  initialItemCount?: number\n\n  /**\n   * Set the callback to specify the contents of the item.\n   */\n  itemContent?: ItemContent<D, C>\n\n  /**\n   * If specified, the component will use the function to generate the `key` property for each list item.\n   */\n  computeItemKey?: ComputeItemKey<D, C>\n\n  /**\n   * By default, the component assumes the default item height from the first rendered item (rendering it as a \"probe\").\n   *\n   * If the first item turns out to be an outlier (very short or tall), the rest of the rendering will be slower,\n   * as multiple passes of rendering should happen for the list to fill the viewport.\n   *\n   * Setting `defaultItemHeight` causes the component to skip the \"probe\" rendering and use the property\n   * value as default height instead.\n   */\n  defaultItemHeight?: number\n\n  /**\n   * Allows customizing the height/width calculation of `Item` elements.\n   *\n   * The default implementation reads `el.getBoundingClientRect().height` and `el.getBoundingClientRect().width`.\n   */\n  itemSize?: (el: HTMLElement, field: 'offsetHeight' | 'offsetWidth') => number\n\n  /**\n   * Can be used to improve performance if the rendered items are of known size.\n   * Setting it causes the component to skip item measurements.\n   */\n  fixedItemHeight?: number\n\n  /**\n   * Use to display placeholders if the user scrolls fast through the list.\n   *\n   * Set `components.ScrollSeekPlaceholder` to change the placeholder content.\n   */\n  scrollSeekConfiguration?: ScrollSeekConfiguration | false\n\n  /**\n   * If set to `true`, the list automatically scrolls to bottom if the total count is changed.\n   * Set to `\"smooth\"` for an animated scrolling.\n   *\n   * By default, `followOutput` scrolls down only if the list is already at the bottom.\n   * To implement an arbitrary logic behind that, pass a function:\n   *\n   * ```tsx\n   * <Virtuoso\n   *  followOutput={(isAtBottom: boolean) => {\n   *    if (expression) {\n   *      return 'smooth' // can be 'auto' or false to avoid scrolling\n   *    } else {\n   *      return false\n   *    }\n   *  }} />\n   * ```\n   */\n  followOutput?: FollowOutput\n\n  /**\n   * Use when implementing inverse infinite scrolling - decrease the value this property\n   * in combination with  `data` or `totalCount` to prepend items to the top of the list.\n   *\n   * Warning: the firstItemIndex should **be a positive number**, based on the total amount of items to be displayed.\n   */\n  firstItemIndex?: number\n\n  /**\n   * Called when the list starts/stops scrolling.\n   */\n  isScrolling?: (isScrolling: boolean) => void\n\n  /**\n   * Gets called when the user scrolls to the end of the list.\n   * Receives the last item index as an argument. Can be used to implement endless scrolling.\n   */\n  endReached?: (index: number) => void\n\n  /**\n   * Called when the user scrolls to the start of the list.\n   */\n  startReached?: (index: number) => void\n\n  /**\n   * Called with the new set of items each time the list items are rendered due to scrolling.\n   */\n  rangeChanged?: (range: ListRange) => void\n\n  /**\n   * Called with true / false when the list has reached the bottom / gets scrolled up.\n   * Can be used to load newer items, like `tail -f`.\n   */\n  atBottomStateChange?: (atBottom: boolean) => void\n\n  /**\n   * Called with `true` / `false` when the list has reached the top / gets scrolled down.\n   */\n  atTopStateChange?: (atTop: boolean) => void\n\n  /**\n   * Called when the total list height is changed due to new items or viewport resize.\n   */\n  totalListHeightChanged?: (height: number) => void\n\n  /**\n   * Called with the new set of items each time the list items are rendered due to scrolling.\n   */\n  itemsRendered?: (items: ListItem<D>[]) => void\n\n  /**\n   * Setting `alignToBottom` to `true` aligns the items to the bottom of the list if the list is shorter than the viewport.\n   * Use `followOutput` property to keep the list aligned when new items are appended.\n   */\n  alignToBottom?: boolean\n\n  /**\n   * Uses the document scroller rather than wrapping the list in its own.\n   */\n  useWindowScroll?: boolean\n\n  /**\n   * Pass a reference to a scrollable parent element, so that the table won't wrap in its own.\n   */\n  customScrollParent?: HTMLElement\n\n  /**\n   * Provides access to the root DOM element\n   */\n  scrollerRef?: (ref: HTMLElement | Window | null) => any\n\n  /**\n   * By default `0`. Redefine to change how much away from the top the scroller can be before the list is not considered not at top.\n   */\n  atTopThreshold?: number\n\n  /**\n   * By default `4`. Redefine to change how much away from the bottom the scroller can be before the list is not considered not at bottom.\n   */\n  atBottomThreshold?: number\n\n  /**\n   * No longer necessary after 2.10.2. component should work out of the box.\n   */\n  react18ConcurrentRendering?: boolean\n}\n\nexport interface VirtuosoGridProps<C extends unknown = unknown> extends GridRootProps {\n  /**\n   * The total amount of items to be rendered.\n   */\n  totalCount: number\n\n  /**\n   * Set the callback to specify the contents of the item.\n   */\n  itemContent?: GridItemContent<C>\n\n  /**\n   * Use the `components` property for advanced customization of the elements rendered by the list.\n   */\n  components?: GridComponents<C>\n\n  /**\n   * Set the overscan property to make the component \"chunk\" the rendering of new items on scroll.\n   * The property causes the component to render more items than the necessary, but reduces the re-renders on scroll.\n   * Setting `{ main: number, reverse: number }` lets you extend the list in both the main and the reverse scrollable directions.\n   */\n  overscan?: number | { main: number; reverse: number }\n\n  /**\n   * If specified, the component will use the function to generate the `key` property for each list item.\n   */\n  computeItemKey?: GridComputeItemKey\n\n  /**\n   * Use to display placeholders if the user scrolls fast through the list.\n   *\n   * Set `components.ScrollSeekPlaceholder` to change the placeholder content.\n   */\n  scrollSeekConfiguration?: ScrollSeekConfiguration | false\n\n  /**\n   * Called when the list starts/stops scrolling.\n   */\n  isScrolling?: (isScrolling: boolean) => void\n\n  /**\n   * Gets called when the user scrolls to the end of the list.\n   * Receives the last item index as an argument. Can be used to implement endless scrolling.\n   */\n  endReached?: (index: number) => void\n\n  /**\n   * Called when the user scrolls to the start of the list.\n   */\n  startReached?: (index: number) => void\n\n  /**\n   * Called with the new set of items each time the list items are rendered due to scrolling.\n   */\n  rangeChanged?: (range: ListRange) => void\n\n  /**\n   * Called with true / false when the list has reached the bottom / gets scrolled up.\n   * Can be used to load newer items, like `tail -f`.\n   */\n  atBottomStateChange?: (atBottom: boolean) => void\n\n  /**\n   * Called with `true` / `false` when the list has reached the top / gets scrolled down.\n   */\n  atTopStateChange?: (atTop: boolean) => void\n\n  /**\n   * Provides access to the root DOM element\n   */\n  scrollerRef?: (ref: HTMLElement | null) => any\n\n  /**\n   * Sets the className for the list DOM element\n   */\n  listClassName?: string\n\n  /**\n   * Sets the grid items' className\n   */\n  itemClassName?: string\n\n  /**\n   * Uses the document scroller rather than wrapping the grid in its own.\n   */\n  useWindowScroll?: boolean\n\n  /**\n   * Pass a reference to a scrollable parent element, so that the grid won't wrap in its own.\n   */\n  customScrollParent?: HTMLElement\n}\n\nexport interface VirtuosoHandle {\n  /**\n   * Scrolls the component to the specified item index. See {@link IndexLocationWithAlign} for more options.\n   */\n  scrollToIndex(location: number | FlatIndexLocationWithAlign): void\n  /**\n   * Scrolls the item into view if necessary. See [the website example](http://virtuoso.dev/keyboard-navigation/) for an implementation.\n   */\n  scrollIntoView(location: FlatScrollIntoViewLocation): void\n  /**\n   * Scrolls the component to the specified location. See [ScrollToOptions (MDN)](https://developer.mozilla.org/en-US/docs/Web/API/ScrollToOptions)\n   */\n  scrollTo(location: ScrollToOptions): void\n  /**\n   * Scrolls the component with the specified amount. See [ScrollToOptions (MDN)](https://developer.mozilla.org/en-US/docs/Web/API/ScrollToOptions)\n   */\n  scrollBy(location: ScrollToOptions): void\n}\n\nexport interface GroupedVirtuosoHandle {\n  scrollToIndex(location: number | IndexLocationWithAlign): void\n  scrollIntoView(location: number | ScrollIntoViewLocation): void\n  scrollTo(location: ScrollToOptions): void\n  scrollBy(location: ScrollToOptions): void\n}\n\nexport interface VirtuosoGridHandle {\n  scrollToIndex(location: number | IndexLocationWithAlign): void\n  scrollTo(location: ScrollToOptions): void\n  scrollBy(location: ScrollToOptions): void\n}\n\nexport interface TableVirtuosoHandle {\n  scrollIntoView(location: number | FlatScrollIntoViewLocation): void\n  scrollToIndex(location: number | FlatIndexLocationWithAlign): void\n  scrollTo(location: ScrollToOptions): void\n  scrollBy(location: ScrollToOptions): void\n}\n\nexport const Virtuoso = List as <ItemData extends unknown = any, Context extends unknown = any>(\n  props: VirtuosoProps<ItemData, Context> & { ref?: Ref<VirtuosoHandle> }\n) => ReactElement\n\nexport const GroupedVirtuoso = List as <ItemData extends unknown = any, Context extends unknown = any>(\n  props: GroupedVirtuosoProps<ItemData, Context> & { ref?: Ref<GroupedVirtuosoHandle> }\n) => ReactElement\n\nexport const TableVirtuoso = Table as <ItemData extends unknown = any, Context extends unknown = any>(\n  props: TableVirtuosoProps<ItemData, Context> & { ref?: Ref<TableVirtuosoHandle> }\n) => ReactElement\n\nexport const VirtuosoGrid = Grid as <Context extends unknown = any>(\n  props: VirtuosoGridProps<Context> & { ref?: Ref<VirtuosoGridHandle> }\n) => ReactElement\n"],"names":["LogLevel","useIsomorphicLayoutEffect","document","useLayoutEffect","useEffect","CONSOLE_METHOD_MAP","DEBUG","INFO","_CONSOLE_METHOD_MAP","WARN","ERROR","loggerSystem","u","system","logLevel","statefulStream","log","label","message","level","_getGlobalThis$VIRTUO","globalThis","window","getValue","console","singleton","useSizeWithElRef","callback","enabled","ref","useRef","callbackRef","_el","ResizeObserver","observer","entries","element","target","offsetParent","elRef","observe","current","unobserve","useSize","useChangedListContentsSizes","itemSize","scrollContainerStateCallback","customScrollParent","el","ranges","children","field","length","results","i","child","item","undefined","dataset","index","parseInt","knownSize","parseFloat","size","lastResult","endIndex","push","startIndex","getChangedChildSizes","scrollableElement","parentElement","scrollTop","firstElementChild","pageYOffset","documentElement","Math","max","scrollHeight","viewportHeight","offsetHeight","correctItemSize","dimension","round","getBoundingClientRect","useScrollTop","smoothScrollTargetReached","scrollerElement","scrollerRefCallback","noop","scrollerRef","scrollTopTarget","timeoutRef","handler","useCallback","ev","innerHeight","clearTimeout","localRef","addEventListener","passive","removeEventListener","scrollByCallback","location","scrollBy","scrollToCallback","isSmooth","behavior","top","ceil","min","abs","setTimeout","scrollTo","domIOSystem","scrollContainerState","stream","deviation","statefulScrollTop","headerHeight","fixedHeaderHeight","footerHeight","scrollingInProgress","react18ConcurrentRendering","connect","pipe","map","_ref","_ref2","NIL_NODE","lvl","newAANode","k","v","l","r","empty","node","newTree","remove","key","last","adjust","clone","_last","deleteLast","findMaxKeyValue","value","Infinity","insert","split","skew","rebalance","walkWithin","start","end","result","concat","walk","args","isSingle","Error","rl","rlvl","rangesWithin","arrayToRanges","items","parser","_parser","nextIndex","nextValue","_parser2","findIndexOfClosestSmallerOrEqual","comparator","floor","match","join","findClosestSmallerOrEqual","rangeIncludes","refRange","range","indexComparator","itemIndex","offsetComparator","offset","itemOffset","offsetPointParser","point","createOffsetTree","prevOffsetTree","syncStart","sizeTree","offsetTree","prevIndex","prevSize","prevOffset","arrayBinarySearch","kv","slice","_step3","_iterator3","done","_step3$value","aOffset","lastIndex","lastOffset","lastSize","sizeStateReducer","state","_ref3","groupIndices","newSizeTree","groupSize","reduce","tree","groupIndex","_insertRanges","_step","_iterator","_createForOfIteratorHelperLoose","overlappingRanges","some","_step2","firstPassDone","shouldInsert","_iterator2","rangeStart","rangeEnd","_step2$value","rangeValue","insertRanges","newOffsetTree","_createOffsetTree","groupOffsetTree","offsetOf","_arrayBinarySearch$fi","originalIndexFromLocation","sizes","isGroupLocation","originalIndexFromItemIndex","hasGroups","groupOffset","SIZE_MAP","offsetWidth","sizeSystem","_ref4","sizeRanges","totalCount","statefulTotalCount","statefulStreamFromEmitter","unshiftWith","shiftWith","firstItemIndex","fixedItemSize","defaultItemSize","data","initial","withLatestFrom","scan","distinctUntilChanged","filter","indexes","_ref5","idx","_ref6","_ref7","_ref7$","trackItemSizes","listRefresh","streamFromEmitter","_ref8","_ref9","newSizes","changed","subscribe","prev","next","diff","val","publish","_ref10","beforeUnshiftWith","_ref11","acc","_ref12","shiftWithOffset","_ref13","_ref14","_ref15","_extends","tup","SUPPORTS_SCROLL_TO_OPTIONS","style","normalizeIndexLocation","align","scrollToIndexSystem","_ref$","_ref$2","scrollToIndex","topListHeight","unsubscribeNextListRefresh","cleartTimeoutRef","unsubscribeListRefresh","cleanup","normalLocation","retry","listChanged","handleNext","UP","INITIAL_BOTTOM_STATE","atBottom","notAtBottomBecause","offsetBottom","stateFlagsSystem","isAtBottom","isAtTop","atBottomStateChange","atTopStateChange","atBottomThreshold","atTopThreshold","isScrolling","merge","duc","skip","mapTo","debounceTime","isScrollingBy","combineLatest","throttleTime","atBottomState","atBottomBecause","scrollTopDelta","_ref3$","lastJumpDueToItemResize","jump","scrollDirection","direction","prevScrollTop","scrollVelocity","_","propsReadySystem","propsReady","didMount","ready","initialTopMostItemIndexSystem","scrolledToInitialItem","initialTopMostItemIndex","normalizeFollowOutput","follow","followOutputSystem","_ref$3","followOutput","pendingScrollHandle","scrollToBottom","followOutputBehavior","_ref2$","shouldFollow","behaviorFromFollowOutput","refreshed","cancel","groupCountsToIndicesAndCount","counts","groupCount","groupedListSystem","groupCounts","topItemsIndexes","groupIndicesAndCount","prop","tupleComparator","rangeComparator","getOverscan","overscan","main","reverse","getViewportIncrease","sizeRangeSystem","listBoundary","increaseViewportBy","visibleRange","listTop","listBottom","stickyHeaderHeight","headerVisible","topViewportAddition","bottomViewportAddition","EMPTY_LIST_STATE","topItems","offsetTop","bottom","transposeItems","originalIndex","transposedItems","groupRanges","currentRange","currentGroupIndex","shift","indexOf","type","buildListState","lastItem","height","listStateSystem","func","called","rangeTopListHeight","stateFlags","itemsRendered","listState","startOffset","endOffset","sizesValue","probeItemSet","getInitialTopMostItemIndexNumber","rangeStartIndex","rangeEndIndex","minStartIndex","offsetPointRanges","endValue","findRange","rangesWithinOffsets","maxIndex","tap","endReached","count","startReached","rangeChanged","initialItemCountSystem","initialItemCount","_ref3$2","includedGroupsCount","adjustedCount","Array","from","scrollSeekSystem","isSeeking","scrollSeekConfiguration","speed","config","enter","exit","velocity","change","scrollSeekRangeChanged","topItemCountSystem","topItemCount","totalListHeightSystem","totalListHeightChanged","totalListHeight","upwardScrollFixSystem","deviationOffset","prevItems","prevTotalCount","totalHeight","newDev","amount","is","initialScrollTopSystem","initialScrollTop","alignToBottomSystem","alignToBottom","paddingTopAddition","windowScrollerSystem","windowScrollContainerState","windowViewportRect","windowScrollTo","useWindowScroll","_excluded","scrollIntoViewSystem","scrollIntoView","viewLocation","rest","_objectWithoutPropertiesLoose","actualIndex","itemTop","featureGroup1System","listSystem","_ref2$2","domIO","_ref2$3","flags","featureGroup1","fixedItemHeight","defaultItemHeight","positionStickyCssValue","createElement","position","useWindowViewportRectRef","viewportInfo","calculateInfo","visibleHeight","rect","visibleWidth","width","customScrollParentRect","deltaTop","_useSizeWithElRef","scrollAndResizeEventHandler","_excluded2","_excluded3","identity","listComponentPropsSystem","itemContent","context","groupContent","components","computeItemKey","headerFooterTag","distinctProp","propName","defaultValue","FooterComponent","HeaderComponent","TopItemListComponent","ListComponent","ItemComponent","GroupComponent","ScrollerComponent","EmptyPlaceholder","ScrollSeekPlaceholder","addDeprecatedAlias","alias","warn","combinedSystem","propsSystem","deprecatedProps","group","itemHeight","scrollingStateChange","adjustForPrependedItems","maxHeightCacheSize","footer","header","HeaderContainer","FooterContainer","ItemContainer","ScrollContainer","GroupContainer","ListContainer","emptyComponent","scrollSeek","deprecateComponentProp","componentName","_extends2","comp","placeholder","DefaultScrollSeekPlaceholder","React","GROUP_STYLE","zIndex","overflowAnchor","ITEM_STYLE","Items","memo","showTopList","_ref5$showTopList","useEmitterValue","usePublisher","windowScrollContainerStateCallback","_scrollContainerStateCallback","useState","setDeviation","useEmitter","marginTop","containerStyle","boxSizing","paddingTop","paddingBottom","contextPropIfNotDomElement","scrollerStyle","outline","overflowY","WebkitOverflowScrolling","viewportStyle","topItemListStyle","Header","Footer","buildScroller","props","_useScrollTop","tabIndex","buildWindowScroller","_useScrollTop2","Viewport","viewportRef","compose","WindowViewport","TopItemListContainer","TopItemList","ListRoot","TheViewport","WindowScroller","Scroller","_systemToComponent","systemToComponent","required","optional","methods","events","List","Component","INITIAL_GRID_STATE","itemWidth","PROBE_GRID_STATE","buildItems","gridSystem","_ref$4","gridState","viewportDimensions","itemDimensions","_ref4$","viewport","viewportWidth","perRow","itemsPerRow","gridLayout","gridComponentPropsSystem","itemClassName","listClassName","GridItems","scrollHeightCallback","listRef","firstItem","firstChild","className","GridRoot","Grid","tableComponentPropsSystem","fixedHeaderContent","TableComponent","TableHeadComponent","TableBodyComponent","TableRowComponent","FillerRow","DefaultFillerRow","padding","border","_useChangedListConten","_React$useState","paddingTopEl","paddingBottomEl","TableRoot","theadRef","TheScroller","TheTable","TheTHead","theHead","borderSpacing","Table","Virtuoso","TableVirtuoso","VirtuosoGrid"],"mappings":"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"}